#############################################################
# Purpose: To test having extra columns on the primary WL#3915
# engine inspecific sourced part
#############################################################

#
# Setup differently defined tables on primary and replica
#

# Def on primary: t (f_1 type_m_1,... f_s type_m_s, f_s1, f_m)
# Def on replica:  t (f_1 type_s_1,... f_s type_s_s)
# where type_mi,type_si (0 < i-1 <s1) pairs are compatible types (WL#3228)
# Arbitrary paramaters of the test are:
# 1. the tables type
# 2. the types of the extra primary's column f_s1,..., f_m
# 3. the numbers of common columns `s' 
# 4. and  extra columns `m' are par
#
# optionally
#
# 5. vary the common columns type within compatible ranges.

#
# constant size column type:

#BIGINT       
#BLOB         
#DATE         
#DATETIME     
#FLOAT        
#INT, INTEGER 
#LONGBLOB      
#LONGTEXT     
#MEDIUMBLOB   
#MEDIUMINT    
#MEDIUMTEXT   
#REAL         
#SMALLINT     
#TEXT         
#TIME         
#TIMESTAMP    
#TINYBLOB     
#TINYINT      
#TINYTEXT     
#YEAR         

# variable size column types:

#BINARY(M)    
#BIT(M)        
#CHAR(M)      
#DECIMAL(M,D) 
#DOUBLE[P]    
#ENUM         
#FLOAT(p)     
#NUMERIC(M,D) 
#SET           
#VARBINARY(M) 
#VARCHAR(M)    
#

--let $_saved_conn= $CURRENT_CONNECTION

let $binformat = `SHOW VARIABLES LIKE '%binlog_format%'`;
--echo
--echo ***********************************************************
--echo ***********************************************************
--echo ***************** Start of Testing ************************
--echo ***********************************************************
--echo ***********************************************************
--echo * This test format == $binformat and engine == $engine_type
--echo ***********************************************************
--echo ***********************************************************
--echo
--echo ***** Testing more columns on the Primary *****
--echo
connection primary;
eval CREATE TABLE t1 (f1 INT, f2 INT, f3 INT PRIMARY KEY, f4 CHAR(20),
                      /* extra */
                      f5 FLOAT DEFAULT '2.00', 
                      f6 CHAR(4) DEFAULT 'TEST',
                      f7 INT DEFAULT '0',
                      f8 TEXT,
                      f9 LONGBLOB,
                      f10 BIT(63),
                      f11 VARBINARY(64))ENGINE=$engine_type;
--echo
--echo * Alter Table on Replica and drop columns f5 through f11 *
--echo
sync_replica_with_primary;
alter table t1 drop f5, drop f6, drop f7, drop f8, drop f9, drop f10, drop f11;

--echo
--echo * Insert data in Primary then update and delete some rows*
--echo
connection primary;
let $j= 50;
--disable_query_log
while ($j)
{
  eval INSERT INTO t1 VALUES ($j, $j, $j, 'second', 2.0, 'kaks', 2, 
                              'got stolen from the paradise', 
                              'very fat blob', b'01010101010101', 
                              0x123456);
  dec $j;
}
let $j= 30;
while ($j)
{
 eval update t1 set f4= 'next' where f1=$j; 
 dec $j;
 dec $j;
 eval delete from t1 where f1=$j;
 dec $j;
}
--enable_query_log

--echo * Select count and 20 rows from Primary *
--echo
SELECT COUNT(*) FROM t1;
--echo
SELECT f1,f2,f3,f4,f5,f6,f7,f8,f9,
       hex(f10),hex(f11) FROM t1 ORDER BY f3 LIMIT 20;

#connection replica;

--disable_query_log
call mtr.add_suppression("Replica SQL.*Table definition on primary and replica does not match: Column 2 type mismatch.* 1535");
call mtr.add_suppression("Replica.*Can.t DROP .c7.; check that column.key exists.* Error_code: 1091");
call mtr.add_suppression("Replica.*Unknown column .c7. in .t15.* Error_code: 1054");
call mtr.add_suppression("Replica.*Key column .c6. doesn.t exist in table.* Error_code: 1072");
call mtr.add_suppression("Replica SQL.*Column 2 of table .test.t1.. cannot be converted from type.* Error_code: 1677");
call mtr.add_suppression("The replica coordinator and worker threads are stopped, possibly leaving data in inconsistent state");
--enable_query_log

sync_replica_with_primary;
--echo
--echo * Select count and 20 rows from Replica *
--echo
SELECT COUNT(*) FROM t1;
--echo
SELECT * FROM t1 ORDER BY f3 LIMIT 20;

--source include/check_replica_is_running.inc

### Altering table def scenario
--echo
--echo ***** Testing Altering table def scenario *****
--echo

connection primary;

   eval CREATE TABLE t2 (f1 INT, f2 INT, f3 INT PRIMARY KEY, f4 CHAR(20),
                      /* extra */
                       f5 DOUBLE DEFAULT '2.00', 
                       f6 ENUM('a', 'b', 'c') default 'a',
		       f7 DECIMAL(17,9) default '1000.00',
		       f8 MEDIUMBLOB,
		       f9 NUMERIC(6,2) default '2000.00',
		       f10 VARCHAR(1024),
		       f11 BINARY(20) NOT NULL DEFAULT '\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0',
		       f12 SET('a', 'b', 'c') default 'b')
                       ENGINE=$engine_type;
--echo
   eval CREATE TABLE t3 (f1 INT, f2 INT, f3 INT PRIMARY KEY, f4 CHAR(20),
                      /* extra */
                       f5 DOUBLE DEFAULT '2.00', 
                       f6 ENUM('a', 'b', 'c') default 'a',
		       f8 MEDIUMBLOB,
		       f10 VARCHAR(1024),
		       f11 BINARY(20) NOT NULL DEFAULT '\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0',
		       f12 SET('a', 'b', 'c') default 'b')
                       ENGINE=$engine_type;

--echo
# no ENUM and SET
    eval CREATE TABLE t4 (f1 INT, f2 INT, f3 INT PRIMARY KEY, f4 CHAR(20),
                      /* extra */
                       f5 DOUBLE DEFAULT '2.00', 
		       f6 DECIMAL(17,9) default '1000.00',
		       f7 MEDIUMBLOB,
		       f8 NUMERIC(6,2) default '2000.00',
		       f9 VARCHAR(1024),
		       f10 BINARY(20) not null default '\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0',
		       f11 CHAR(255))
                       ENGINE=$engine_type;

--echo
    eval CREATE TABLE t31 (f1 INT, f2 INT, f3 INT PRIMARY KEY, f4 CHAR(20),
                       
                       /* extra */

                       f5  BIGINT,
                       f6  BLOB,
		       f7  DATE,
		       f8  DATETIME,
		       f9  FLOAT,
		       f10 INT,
		       f11 LONGBLOB,
		       f12 LONGTEXT,
		       f13 MEDIUMBLOB,
		       f14 MEDIUMINT,
		       f15 MEDIUMTEXT,
		       f16 REAL,
		       f17 SMALLINT,
		       f18 TEXT,
		       f19 TIME,
		       f20 TIMESTAMP,
		       f21 TINYBLOB,
		       f22 TINYINT,
		       f23 TINYTEXT,
		       f24 YEAR,
		       f25 BINARY(255),
		       f26 BIT(64),
		       f27 CHAR(255),
		       f28 DECIMAL(30,7),
		       f29 DOUBLE,
		       f30 ENUM ('a','b', 'c') default 'a',
		       f31 FLOAT,
		       f32 NUMERIC(17,9),
		       f33 SET ('a', 'b', 'c') default 'b',
		       f34 VARBINARY(1025),
		       f35 VARCHAR(257)       
                       ) ENGINE=$engine_type;
--echo
--echo ** Alter tables on replica and drop columns **
--echo
#connection replica;
    sync_replica_with_primary;
    alter table t2 drop f5, drop f6, drop f7, drop f8, drop f9, drop f10, drop f11, drop
f12;
    alter table t3 drop f5, drop f6, drop f8, drop f10, drop f11, drop f12;
    alter table t4 drop f5, drop f6, drop f7, drop f8, drop f9, drop f10, drop f11;

    alter table t31 
       drop f5, drop f6, drop f7, drop f8, drop f9, drop f10, drop f11,
       drop f12, drop f13, drop f14, drop f15, drop f16, drop f17, drop f18,
       drop f19, drop f20, drop f21, drop f22, drop f23, drop f24, drop f25,
       drop f26, drop f27, drop f28, drop f29, drop f30, drop f31, drop f32,
       drop f33, drop f34, drop f35;
                 
--echo
--echo ** Insert Data into Primary **
connection primary;
   INSERT into t2 set f1=1, f2=1, f3=1, f4='first', f8='f8: medium size blob', f10='f10:
some var char';
   INSERT into t2 values (2, 2, 2, 'second',
       2.0, 'b', 2000.0002, 'f8: medium size blob', 2000, 'f10: some var char',
'01234567', 'c'),
                       (3, 3, 3, 'third',
       3.0, 'b', 3000.0003, 'f8: medium size blob', 3000, 'f10: some var char',
'01234567', 'c');
   INSERT into t3 set f1=1, f2=1, f3=1, f4='first', f10='f10: some var char';
   INSERT into t4 set f1=1, f2=1, f3=1, f4='first', f7='f7: medium size blob', f10='f10:
binary data';
   INSERT into t31 set f1=1, f2=1, f3=1, f4='first';
   INSERT IGNORE into t31 set f1=1, f2=1, f3=2, f4='second',
     f9=2.2,  f10='seven samurai', f28=222.222, f35='222';
   INSERT IGNORE into t31 values (1, 1, 3, 'third',
      /* f5  BIGINT,  */            333333333333333333333333,
      /* f6  BLOB,  */              '3333333333333333333333',
      /* f7  DATE,  */              '2007-07-18',
      /* f8  DATETIME,  */          "2007-07-18",
      /* f9  FLOAT,  */             3.33333333,
      /* f10 INT,  */               333333333,
      /* f11 LONGBLOB,  */          '3333333333333333333',
      /* f12 LONGTEXT,  */          '3333333333333333333',
      /* f13 MEDIUMBLOB,  */        '3333333333333333333',
      /* f14 MEDIUMINT,  */         33,
      /* f15 MEDIUMTEXT,  */        3.3,
      /* f16 REAL,  */              3.3,
      /* f17 SMALLINT,  */          3,
      /* f18 TEXT,  */              '33',
      /* f19 TIME,  */              '2:59:58.999',
      /* f20 TIMESTAMP,  */         20000303000000,
      /* f21 TINYBLOB,  */          '3333',
      /* f22 TINYINT,  */           3,
      /* f23 TINYTEXT,  */          '3',
      /* f24 YEAR,  */              3000,
      /* f25 BINARY(255),  */       'three_33333',
      /* f26 BIT(64),  */           b'011', 
      /* f27 CHAR(255),  */         'three',
      /* f28 DECIMAL(30,7),  */     3.333,
      /* f29 DOUBLE,  */            3.333333333333333333333333333,
      /* f30 ENUM ('a','b','c')*/   'c',
      /* f31 FLOAT,  */             3.0,
      /* f32 NUMERIC(17,9),  */     3.3333,
      /* f33 SET ('a','b','c'),*/   'c',
      /*f34 VARBINARY(1025),*/      '3333 minus 3',
      /*f35 VARCHAR(257),*/         'three times three'
      );
   
   INSERT IGNORE into t31 values (1, 1, 4, 'fourth',
       /* f5  BIGINT,  */            333333333333333333333333,
       /* f6  BLOB,  */              '3333333333333333333333',
       /* f7  DATE,  */              '2007-07-18',
       /* f8  DATETIME,  */          "2007-07-18",
       /* f9  FLOAT,  */             3.33333333,
       /* f10 INT,  */               333333333,
       /* f11 LONGBLOB,  */          '3333333333333333333',
       /* f12 LONGTEXT,  */          '3333333333333333333',
       /* f13 MEDIUMBLOB,  */        '3333333333333333333',
       /* f14 MEDIUMINT,  */         33,
       /* f15 MEDIUMTEXT,  */        3.3,
       /* f16 REAL,  */              3.3,
       /* f17 SMALLINT,  */          3,
       /* f18 TEXT,  */              '33',
       /* f19 TIME,  */              '2:59:58.999',
       /* f20 TIMESTAMP,  */         20000303000000,
       /* f21 TINYBLOB,  */          '3333',
       /* f22 TINYINT,  */           3,
       /* f23 TINYTEXT,  */          '3',
       /* f24 YEAR,  */              3000,
       /* f25 BINARY(255),  */       'three_33333',
       /* f26 BIT(64),  */           b'011',
       /* f27 CHAR(255),  */         'three',
       /* f28 DECIMAL(30,7),  */     3.333,
       /* f29 DOUBLE,  */            3.333333333333333333333333333,
       /* f30 ENUM ('a','b','c')*/   'c',
       /* f31 FLOAT,  */             3.0,
       /* f32 NUMERIC(17,9),  */     3.3333,
       /* f33 SET ('a','b','c'),*/   'c',
       /*f34 VARBINARY(1025),*/      '3333 minus 3',
       /*f35 VARCHAR(257),*/         'three times three'
       ),
   (1, 1, 5, 'fifth',
       /* f5  BIGINT,  */            333333333333333333333333,
       /* f6  BLOB,  */              '3333333333333333333333',
       /* f7  DATE,  */              '2007-07-18',
       /* f8  DATETIME,  */          "2007-07-18",
       /* f9  FLOAT,  */             3.33333333,
       /* f10 INT,  */               333333333,
       /* f11 LONGBLOB,  */          '3333333333333333333',
       /* f12 LONGTEXT,  */          '3333333333333333333',
       /* f13 MEDIUMBLOB,  */        '3333333333333333333',
       /* f14 MEDIUMINT,  */         33,
       /* f15 MEDIUMTEXT,  */        3.3,
       /* f16 REAL,  */              3.3,
       /* f17 SMALLINT,  */          3,
       /* f18 TEXT,  */              '33',
       /* f19 TIME,  */              '2:59:58.999',
       /* f20 TIMESTAMP,  */         20000303000000,
       /* f21 TINYBLOB,  */          '3333',
       /* f22 TINYINT,  */           3,
       /* f23 TINYTEXT,  */          '3',
       /* f24 YEAR,  */              3000,
       /* f25 BINARY(255),  */       'three_33333',
       /* f26 BIT(64),  */           b'011',
       /* f27 CHAR(255),  */         'three',
       /* f28 DECIMAL(30,7),  */     3.333,
       /* f29 DOUBLE,  */            3.333333333333333333333333333,
       /* f30 ENUM ('a','b','c')*/   'c',
       /* f31 FLOAT,  */             3.0,
       /* f32 NUMERIC(17,9),  */     3.3333,
       /* f33 SET ('a','b','c'),*/   'c',
       /*f34 VARBINARY(1025),*/      '3333 minus 3',
       /*f35 VARCHAR(257),*/         'three times three'
       ),
   (1, 1, 6, 'sixth',
       /* f5  BIGINT,  */            NULL,
       /* f6  BLOB,  */              '3333333333333333333333',
       /* f7  DATE,  */              '2007-07-18',
       /* f8  DATETIME,  */          "2007-07-18",
       /* f9  FLOAT,  */             3.33333333,
       /* f10 INT,  */               333333333,
       /* f11 LONGBLOB,  */          '3333333333333333333',
       /* f12 LONGTEXT,  */          '3333333333333333333',
       /* f13 MEDIUMBLOB,  */        '3333333333333333333',
       /* f14 MEDIUMINT,  */         33,
       /* f15 MEDIUMTEXT,  */        3.3,
       /* f16 REAL,  */              3.3,
       /* f17 SMALLINT,  */          3,
       /* f18 TEXT,  */              '33',
       /* f19 TIME,  */              '2:59:58.999',
       /* f20 TIMESTAMP,  */         20000303000000,
       /* f21 TINYBLOB,  */          '3333',
       /* f22 TINYINT,  */           3,
       /* f23 TINYTEXT,  */          '3',
       /* f24 YEAR,  */              3000,
       /* f25 BINARY(255),  */       'three_33333',
       /* f26 BIT(64),  */           b'011',
       /* f27 CHAR(255),  */         'three',
       /* f28 DECIMAL(30,7),  */     3.333,
       /* f29 DOUBLE,  */            3.333333333333333333333333333,
       /* f30 ENUM ('a','b','c')*/   'c',
       /* f31 FLOAT,  */             3.0,
       /* f32 NUMERIC(17,9),  */     3.3333,
       /* f33 SET ('a','b','c'),*/   'c',
       /*f34 VARBINARY(1025),*/      '3333 minus 3',
       /*f35 VARCHAR(257),*/         NULL
       );
--echo 
--echo ** Sync replica with primary ** 
--echo ** Do selects from tables **
--echo  
#connection replica;
   sync_replica_with_primary;

   select * from t1 order by f3;
   select * from t2 order by f1;
   select * from t3 order by f1;
   select * from t4 order by f1;
   select * from t31 order by f3;
   
connection primary;
--echo
--echo ** Do updates primary **
--echo
   update t31 set f5=555555555555555 where f3=6;
   update t31 set f2=2 where f3=2;
   update t31 set f1=NULL where f3=1;
   update ignore t31 set f3=NULL, f27=NULL, f35='f35 new value' where f3=3;

--echo
--echo ** Delete from Primary **
--echo

   delete from t1;
   delete from t2;
   delete from t3;
   delete from t4;
   delete from t31;

#connection replica;
   sync_replica_with_primary;
   select * from t31;

--echo
--echo ** Check replica status **
--echo
--source include/check_replica_is_running.inc

#### Clean Up ####

connection primary;
--disable_warnings
--disable_query_log
  DROP TABLE t1,t2,t3,t4,t31;

######################################################
#connection replica;
  sync_replica_with_primary;
--enable_query_log
--enable_warnings
--echo
--echo ****************************************
--echo * columns in primary at middle of table *
--echo * Expect: Proper error message         *
--echo ****************************************
--echo
--echo ** Stop and Reset Replica **
--echo
STOP REPLICA;
--echo
--echo ** create table replica side **
eval CREATE TABLE t10 (a INT PRIMARY KEY, b BLOB, c CHAR(5)
                       ) ENGINE=$engine_type;

--echo
--echo ** Connect to primary and create table **
--echo
--connection primary
eval CREATE TABLE t10 (a INT KEY, b BLOB, f DOUBLE DEFAULT '233',
                      c CHAR(5), e INT DEFAULT '1')ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);
INSERT INTO t10 () VALUES(1,@b1,DEFAULT,'Kyle',DEFAULT),
                         (2,@b1,DEFAULT,'JOE',DEFAULT),
                         (3,@b1,DEFAULT,'QA',DEFAULT);

--echo
--echo ********************************************
--echo *** Expect replica to fail with Error 1677 ***
--echo ********************************************
--echo
connection replica;
--let $replica_skip_counter= 2
--let $replica_sql_errno= convert_error(ER_REPLICA_CONVERSION_FAILED)
--source include/wait_for_replica_sql_error_and_skip.inc

--echo
--echo *** Drop t10  ***
connection primary;
DROP TABLE t10;
sync_replica_with_primary;

############################################
############## Continued ###################
############################################
--echo
--echo *********************************************
--echo * More columns in primary at middle of table *
--echo * Expect: Proper error message              *
--echo *********************************************
--echo
--echo  *** Create t11 on replica  ***
STOP REPLICA;

eval CREATE TABLE t11 (a INT PRIMARY KEY, b BLOB, c VARCHAR(254)
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t11 on Primary ***
connection primary;
eval CREATE TABLE t11 (a INT KEY, b BLOB, f TEXT,
                      c CHAR(5) DEFAULT 'test', e INT DEFAULT '1')ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);
INSERT INTO t11 () VALUES(1,@b1,'Testing is fun','Kyle',DEFAULT),
                         (2,@b1,'Testing is cool','JOE',DEFAULT),
                         (3,@b1,DEFAULT,'QA',DEFAULT);

--echo
--echo ********************************************
--echo *** Expect replica to fail with Error 1677 ***
--echo ********************************************
--echo
connection replica;
--let $replica_skip_counter= 2
--let $replica_sql_errno= convert_error(ER_REPLICA_CONVERSION_FAILED)
--source include/wait_for_replica_sql_error_and_skip.inc

--echo
--echo *** Drop t11  ***
connection primary;
DROP TABLE t11;
sync_replica_with_primary;

############################################
############## Continued ###################
############################################
--echo
--echo *********************************************
--echo * More columns in primary at middle of table *
--echo * Expect: This one should pass blob-text    *
--echo *********************************************
--echo
--echo  *** Create t12 on replica  ***
STOP REPLICA;
eval CREATE TABLE t12 (a INT PRIMARY KEY, b BLOB, c BLOB
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t12 on Primary ***
connection primary;
eval CREATE TABLE t12 (a INT KEY, b BLOB, f TEXT,
                      c CHAR(5) DEFAULT 'test', e INT DEFAULT '1')ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);
INSERT INTO t12 () VALUES(1,@b1,'Kyle',DEFAULT,DEFAULT),
                         (2,@b1,'JOE',DEFAULT,DEFAULT),
                         (3,@b1,'QA',DEFAULT,DEFAULT);
--echo
SELECT a,hex(b),f,c,e FROM t12 ORDER BY a;

--echo
--echo *** Select on Replica ***
sync_replica_with_primary;
SELECT a,hex(b),c FROM t12 ORDER BY a;

--echo
--echo *** Drop t12  ***
connection primary;
DROP TABLE t12;
sync_replica_with_primary;

############################################
############## Continued ###################
############################################
--echo
--echo ****************************************************
--echo * - Alter Primary adding columns at middle of table *
--echo *   Expect: columns added                          *
--echo ****************************************************
--echo
--echo
--echo *** Create t14 on replica  ***
STOP REPLICA;
eval CREATE TABLE t14 (c1 INT PRIMARY KEY, c4 BLOB, c5 CHAR(5)
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t14 on Primary ***
connection primary;
eval CREATE TABLE t14 (c1 INT KEY, c4 BLOB, c5 CHAR(5),
                      c6 INT DEFAULT '1',
                      c7 TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
                      )ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
ALTER TABLE t14 ADD COLUMN c2 DECIMAL(8,2) AFTER c1;
ALTER TABLE t14 ADD COLUMN c3 TEXT AFTER c2;
--echo
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);
INSERT INTO t14 () VALUES(1,1.00,'Replication Testing Extra Col',@b1,'Kyle',DEFAULT,DEFAULT),
                        (2,2.00,'This Test Should work',@b1,'JOE',DEFAULT,DEFAULT),
                        (3,3.00,'If is does not, I will open a bug',@b1,'QA',DEFAULT,DEFAULT);
--echo
--replace_column 7 CURRENT_TIMESTAMP
SELECT c1,c2,c3,hex(c4),c5,c6,c7 FROM t14 ORDER BY c1;

--echo
--echo *** Select on Replica ****
sync_replica_with_primary;
SELECT c1,c2,c3,hex(c4),c5 FROM t14 ORDER BY c1;

####################################################
--echo
--echo ****************************************************
--echo * - Alter Primary Dropping columns from the middle. *
--echo *   Expect: columns dropped                        *
--echo ****************************************************
--echo
--echo *** connect to primary and drop columns ***
connection primary;
ALTER TABLE t14 DROP COLUMN c2;
ALTER TABLE t14 DROP COLUMN c7;
--echo
--echo *** Select from Primary ***
SELECT c1,c3,hex(c4),c5,c6 FROM t14 ORDER BY c1;
--echo

--echo ************
--echo * Bug30415 *
--echo ************
# Uncomment below once fixed

#--echo *** Select from Replica ***
#sync_replica_with_primary;
#SELECT c1,c2,c3,hex(c4),c5 FROM t14 ORDER BY c1;

# Bug30415
# Remove below once fixed
#***************************
connection replica;
--let $replica_sql_errno= convert_error(ER_CANT_DROP_FIELD_OR_KEY)
--source include/wait_for_replica_sql_error.inc
#***************************

STOP REPLICA;

--echo
--echo *** Drop t14  ***
DROP TABLE t14;

connection primary;
DROP TABLE t14;

connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

#################################################
--echo
--echo *************************************************
--echo * - Alter Primary adding columns at end of table *
--echo *   Expect: Error 1054                          *
--echo *************************************************
--echo
--echo *** Create t15 on replica  ***
STOP REPLICA;
eval CREATE TABLE t15 (c1 INT PRIMARY KEY, c4 BLOB, c5 CHAR(5)
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t15 on Primary ***
connection primary;
eval CREATE TABLE t15 (c1 INT KEY, c4 BLOB, c5 CHAR(5),
                      c6 INT DEFAULT '1',
                      c7 TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
                      )ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
ALTER TABLE t15 ADD COLUMN c2 DECIMAL(8,2) AFTER c7;
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);
INSERT INTO t15 () VALUES(1,@b1,'Kyle',DEFAULT,DEFAULT,3.00),
                        (2,@b1,'JOE',DEFAULT,DEFAULT,3.00),
                        (3,@b1,'QA',DEFAULT,DEFAULT,3.00);
--replace_column 5 CURRENT_TIMESTAMP
SELECT c1,hex(c4),c5,c6,c7,c2 FROM t15 ORDER BY c1;

--echo
--echo ********************************************
--echo *** Expect replica to fail with Error 1054 ***
--echo ********************************************
--echo
connection replica;
--let $replica_sql_errno= convert_error(ER_BAD_FIELD_ERROR)
--source include/wait_for_replica_sql_error.inc
STOP REPLICA;

--echo
--echo *** Drop t15  ***
DROP TABLE t15;

connection primary;
DROP TABLE t15;

connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

####################################################
--echo
--echo ************************************************
--echo * - Create index on Primary column not on replica *
--echo *   Expect:Warning                             *
--echo ************************************************
--echo
--echo *** Create t16 on replica  ***
STOP REPLICA;
eval CREATE TABLE t16 (c1 INT PRIMARY KEY, c4 BLOB, c5 CHAR(5)
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t16 on Primary ***
connection primary;
eval CREATE TABLE t16 (c1 INT KEY, c4 BLOB, c5 CHAR(5),
                      c6 INT DEFAULT '1',
                      c7 TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
                      )ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Create Index and Data Insert ***
connection primary;
CREATE INDEX part_of_c6 ON t16 (c6);
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);
INSERT INTO t16 () VALUES(1,@b1,'Kyle',DEFAULT,DEFAULT),
                        (2,@b1,'JOE',2,DEFAULT),
                        (3,@b1,'QA',3,DEFAULT);
--replace_column 5 CURRENT_TIMESTAMP
SELECT c1,hex(c4),c5,c6,c7 FROM t16 ORDER BY c1;

# Uncomment the below when bug 30434 is patched

#--echo *** Select on Replica ****
#sync_replica_with_primary;
#SELECT c1,hex(c4),c5 FROM t16 ORDER BY c1;
#
#--echo *** Drop t16  ***
#connection primary;
#DROP TABLE t16;
#sync_replica_with_primary;

# Remove the below when bug 30434 is patched
#*******************************************
--echo
--echo *****************
--echo *** BUG 30434 ***
--echo *****************
--echo
connection replica;
--let $replica_sql_errno= convert_error(ER_KEY_COLUMN_DOES_NOT_EXITS)
--source include/wait_for_replica_sql_error.inc
STOP REPLICA;

--echo
--echo *** Drop t16  ***
DROP TABLE t16;

connection primary;
DROP TABLE t16;

connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

####################################################
--echo
--echo *****************************************************
--echo * - Delete rows using column on Primary not on replica *
--echo *   Expect: Rows Deleted                            *
--echo *****************************************************
--echo
--echo *** Create t17 on replica  ***
STOP REPLICA;
eval CREATE TABLE t17 (c1 INT PRIMARY KEY, c4 BLOB, c5 CHAR(5)
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t17 on Primary ***
connection primary;
eval CREATE TABLE t17 (c1 INT KEY, c4 BLOB, c5 CHAR(5),
                      c6 INT DEFAULT '1',
                      c7 TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
                      )ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);
INSERT INTO t17 () VALUES(1,@b1,'Kyle',DEFAULT,DEFAULT),
                        (2,@b1,'JOE',2,DEFAULT),
                        (3,@b1,'QA',3,DEFAULT);
--replace_column 5 CURRENT_TIMESTAMP
SELECT c1,hex(c4),c5,c6,c7 FROM t17 ORDER BY c1;

--echo
--echo ** Select * from Replica **
sync_replica_with_primary;
SELECT c1,hex(c4),c5 FROM t17 ORDER BY c1;

--echo
--echo ** Delete from primary **
connection primary;
DELETE FROM t17 WHERE c6 = 3;
--replace_column 5 CURRENT_TIMESTAMP
SELECT c1,hex(c4),c5,c6,c7 FROM t17 ORDER BY c1;

--echo 
--echo ** Check replica **
sync_replica_with_primary;
SELECT c1,hex(c4),c5 FROM t17 ORDER BY c1;


connection primary;
DROP TABLE t17;
sync_replica_with_primary;
--echo

####################################################
--echo
--echo *****************************************************
--echo * - Update row using column on Primary not on replica *
--echo *   Expect: Rows updated                           *
--echo *****************************************************
--echo
--echo ** Bug30674 **
--echo
--echo *** Create t18 on replica  ***
--echo 

STOP REPLICA;
eval CREATE TABLE t18 (c1 INT PRIMARY KEY, c4 BLOB, c5 CHAR(5)
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t18 on Primary ***
connection primary;
eval CREATE TABLE t18 (c1 INT KEY, c4 BLOB, c5 CHAR(5),
                      c6 INT DEFAULT '1',
                      c7 TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
                      )ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
set @b1 = 'b1b1b1b1';
set @b1 = concat(@b1,@b1);

INSERT INTO t18 () VALUES(1,@b1,'Kyle',DEFAULT,DEFAULT),
                        (2,@b1,'JOE',2,DEFAULT),
                        (3,@b1,'QA',3,DEFAULT);
--replace_column 5 CURRENT_TIMESTAMP
SELECT c1,hex(c4),c5,c6,c7 FROM t18 ORDER BY c1;

--echo
--echo ** Select * from Replica **
sync_replica_with_primary;
SELECT c1,hex(c4),c5 FROM t18 ORDER BY c1;

--echo
--echo ** update from primary **
connection primary;
UPDATE t18 SET c5 = 'TEST' WHERE c6 = 3;

--replace_column 5 CURRENT_TIMESTAMP
SELECT c1,hex(c4),c5,c6,c7 FROM t18 ORDER BY c1;

--echo
--echo ** Check replica **
sync_replica_with_primary;
SELECT c1,hex(c4),c5 FROM t18 ORDER BY c1;

connection primary;
DROP TABLE t18;
sync_replica_with_primary;
--echo

####################################################
--echo
--echo *****************************************************
--echo * - Insert UUID  column on Primary not on replica *
--echo *   Expect: Rows inserted                      *
--echo *****************************************************
--echo
--echo *** Create t5 on replica  ***
STOP REPLICA;
eval CREATE TABLE t5 (c1 INT PRIMARY KEY, c4 BLOB, c5 CHAR(5)
                       ) ENGINE=$engine_type;

--echo
--echo *** Create t5 on Primary ***
connection primary;
eval CREATE TABLE t5 (c1 INT KEY, c4 BLOB, c5 CHAR(5),
                      c6 LONG, 
                      c7 TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
                      )ENGINE=$engine_type;

--echo
--echo *** Start Replica ***
connection replica;

# reset primary and replica and start replica
--let $rpl_only_running_threads= 1
--source include/rpl_reset.inc

--echo
--echo *** Primary Data Insert ***
connection primary;
set @b1 = 'b1b1b1b1';
INSERT INTO t5 () VALUES(1,@b1,'Kyle',UUID(),DEFAULT),
                        (2,@b1,'JOE',UUID(),DEFAULT),
                        (3,@b1,'QA',UUID(),DEFAULT);
--replace_column 4 UUID 5 TIME 
SELECT c1,hex(c4),c5,c6,c7 FROM t5 ORDER BY c1;

--echo
--echo ** Select * from Replica **
sync_replica_with_primary;
SELECT c1,hex(c4),c5 FROM t5 ORDER BY c1;

connection primary;
DROP TABLE t5;
sync_replica_with_primary;
--echo

# END of 5.1 tests case

#
# BUG#53386: HA_ERR_CORRUPT_EVENT or debug assertion with different table on replica
#

-- source include/rpl_reset.inc
-- connection primary
SET NAMES utf8;

# CREATE Different tables on primary and replica
SET SQL_LOG_BIN=0;
-- eval CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(255) CHARACTER SET UTF8 NOT NULL) ENGINE=$engine_type
SET SQL_LOG_BIN=1;
-- connection replica
-- eval CREATE TABLE t1 (c1 INT) ENGINE=$engine_type

# insert empty row (c2 gets an empty string)
-- connection primary

-- disable_warnings
INSERT IGNORE INTO t1 VALUES (); 

# insert multi-byte chars that will take more than 255 bytes 
SET @text= REPEAT(_utf8'ç', 255);
INSERT INTO t1 VALUES (1, @text);
-- enable_warnings

SELECT * FROM t1 ORDER BY c1; 
-- sync_replica_with_primary
SELECT * FROM t1 ORDER BY c1; 

# clean up
-- connection primary
DROP TABLE t1; 
-- sync_replica_with_primary

--connection $_saved_conn
