--source include/not_gtid_enabled.inc

# Store the time of password_last_changed column from mysql.user table
# to restore it back later.
let $date_to_restore=`SELECT password_last_changed from mysql.user where host='localhost'`;

let $LOAD_FILE= $MYSQLTEST_VARDIR/std_data/words.dat;
CREATE TABLE t1 (word CHAR(20) NOT NULL);
--replace_result $LOAD_FILE LOAD_FILE
eval LOAD DATA INFILE '$LOAD_FILE' INTO TABLE t1;
--replace_result $LOAD_FILE LOAD_FILE
eval LOAD DATA INFILE '$LOAD_FILE' INTO TABLE t1;
SELECT * FROM t1  ORDER BY word LIMIT 10;

#
# Test replica with wrong password
#
save_primary_pos;
connection replica;
sync_with_primary;
STOP REPLICA;
connection primary;
SET PASSWORD FOR root@"localhost" = 'foo';
connection replica;
START REPLICA;
connection primary;
#
# Give replica time to do at last one failed connect retry
# This one must be short so that the replica will not stop retrying
real_sleep 2;
SET PASSWORD FOR root@"localhost" = '';
# Give replica time to connect (will retry every second)
sleep 2;

CREATE TABLE t3(n INT);
INSERT INTO t3 VALUES(1),(2);
sync_replica_with_primary;
SELECT * FROM t3 ORDER BY n;
SELECT SUM(LENGTH(word)) FROM t1;
connection primary;
DROP TABLE t1,t3;
save_primary_pos;
connection replica;
sync_with_primary;

# Test if the replica SQL thread can be more than 16K behind the replica
# I/O thread (> IO_SIZE)

connection primary;
# we'll use table-level locking to delay replica SQL thread
eval CREATE TABLE t1 (n INT) ENGINE=$engine_type;
sync_replica_with_primary;
connection primary;
RESET PRIMARY;
connection replica;
STOP REPLICA;
RESET REPLICA;

connection primary;
let $1=5000;
# Generate 16K of relay log
disable_query_log;
while ($1)
{
 eval INSERT INTO t1 VALUES($1);
 dec $1;
}
enable_query_log;
SELECT COUNT(*) FROM t1;
save_primary_pos;

# Try to cause a large relay log lag on the replica by locking t1
connection replica;
RESET PRIMARY;
LOCK TABLES t1 READ;
START REPLICA;
UNLOCK TABLES;
sync_with_primary;
SELECT COUNT(*) FROM t1;

connection primary;
DROP TABLE t1;
CREATE TABLE t1 (n INT);
INSERT INTO t1 VALUES(3456);
sync_replica_with_primary;
SELECT n FROM t1;

connection primary;
DROP TABLE t1;

--disable_query_log ONCE
--eval UPDATE mysql.user SET password_last_changed= '$date_to_restore'
--echo # mysql.user table restored to original values.

sync_replica_with_primary;
