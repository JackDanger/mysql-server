call mtr.add_suppression('Attempting backtrace');
call mtr.add_suppression('MYSQL_BIN_LOG::purge_logs failed to process registered files that would be purged.');
call mtr.add_suppression('MYSQL_BIN_LOG::open failed to sync the index file');
call mtr.add_suppression('Turning logging off for the whole duration of the MySQL server process.');
call mtr.add_suppression('Could not open .*');
call mtr.add_suppression('MYSQL_BIN_LOG::purge_logs failed to clean registers before purging logs.');
call mtr.add_suppression("The server was unable to create a new log file. "
                         "An incident event has been written to the binary "
                         "log which will stop the replicas.");
RESET PRIMARY;
flush logs;
flush logs;
flush logs;
show binary logs;
Log_name	File_size
primary-bin.000001	#
primary-bin.000002	#
primary-bin.000003	#
primary-bin.000004	#
purge binary logs TO 'primary-bin.000004';
Warnings:
Warning	1612	Being purged log primary-bin.000001 was not found
*** must show a list starting from the 'TO' argument of PURGE ***
show binary logs;
Log_name	File_size
primary-bin.000004	#
reset primary;
flush logs;
flush logs;
flush logs;
*** must be a warning primary-bin.000001 was not found ***
Warnings:
Warning	1868	file primary-bin.000004 was not purged because it is the active log file.
Warning	1612	Being purged log primary-bin.000001 was not found
*** must show one record, of the active binlog, left in the index file after PURGE ***
show binary logs;
Log_name	File_size
primary-bin.000004	#
reset primary;
flush logs;
flush logs;
flush logs;
purge binary logs TO 'primary-bin.000002';
ERROR HY000: Fatal error during log purge
show warnings;
Level	Code	Message
Warning	1377	a problem with deleting primary-bin.000001; consider examining correspondence of your binlog index file to the actual binlog files
Error	1377	Fatal error during log purge
reset primary;
# crash_purge_before_update_index
flush logs;
SET SESSION debug="+d,crash_purge_before_update_index";
purge binary logs TO 'primary-bin.000002';
ERROR HY000: Lost connection to MySQL server during query
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000001
primary-bin.000002
primary-bin.000003

# crash_purge_non_critical_after_update_index
flush logs;
SET SESSION debug="+d,crash_purge_non_critical_after_update_index";
purge binary logs TO 'primary-bin.000004';
ERROR HY000: Lost connection to MySQL server during query
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000004
primary-bin.000005

# crash_purge_critical_after_update_index
flush logs;
SET SESSION debug="+d,crash_purge_critical_after_update_index";
purge binary logs TO 'primary-bin.000006';
ERROR HY000: Lost connection to MySQL server during query
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007

# crash_create_non_critical_before_update_index
SET SESSION debug="+d,crash_create_non_critical_before_update_index";
flush logs;
ERROR HY000: Lost connection to MySQL server during query
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008

# crash_create_critical_before_update_index
SET SESSION debug="+d,crash_create_critical_before_update_index";
flush logs;
ERROR HY000: Lost connection to MySQL server during query
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008
primary-bin.000009

# crash_create_after_update_index
SET SESSION debug="+d,crash_create_after_update_index";
flush logs;
ERROR HY000: Lost connection to MySQL server during query
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008
primary-bin.000009
primary-bin.000010
primary-bin.000011

#
# This should put the server in unsafe state and stop
# accepting any command. If we inject a fault at this
# point and continue the execution the server crashes.
#
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008
primary-bin.000009
primary-bin.000010
primary-bin.000011

# fault_injection_registering_index
SET SESSION debug="+d,fault_injection_registering_index";
SET GLOBAL binlog_error_action= IGNORE_ERROR;
flush logs;
ERROR HY000: Can't open file: 'primary-bin.000012' (errno: 1 - Operation not permitted)
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008
primary-bin.000009
primary-bin.000010
primary-bin.000011

# restart
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008
primary-bin.000009
primary-bin.000010
primary-bin.000011
primary-bin.000012

# fault_injection_updating_index
SET SESSION debug="+d,fault_injection_updating_index";
SET GLOBAL binlog_error_action= IGNORE_ERROR;
flush logs;
ERROR HY000: Can't open file: 'primary-bin.000013' (errno: 1 - Operation not permitted)
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008
primary-bin.000009
primary-bin.000010
primary-bin.000011
primary-bin.000012

# restart
SET @index=LOAD_FILE('MYSQLTEST_VARDIR/mysqld.1/data//primary-bin.index');
SELECT @index;
@index
primary-bin.000006
primary-bin.000007
primary-bin.000008
primary-bin.000009
primary-bin.000010
primary-bin.000011
primary-bin.000012
primary-bin.000013

# Test case6: Set DEBUG POINT before rename index file when
#             appending a binlog file name to index file.
show binary logs;
Log_name	File_size
primary-bin.000006	#
primary-bin.000007	#
primary-bin.000008	#
primary-bin.000009	#
primary-bin.000010	#
primary-bin.000011	#
primary-bin.000012	#
primary-bin.000013	#
SET SESSION debug="+d,crash_create_before_rename_index_file";
flush logs;
ERROR HY000: Lost connection to MySQL server during query
# Restart the primary server
# Test if the index file has the correct data,
# i.e. binlog file name is added.
show binary logs;
Log_name	File_size
primary-bin.000006	#
primary-bin.000007	#
primary-bin.000008	#
primary-bin.000009	#
primary-bin.000010	#
primary-bin.000011	#
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
# Test case7: Set DEBUG POINT after rename index file when
#             appending a binlog file name to index file.
SET SESSION debug="+d,crash_create_after_rename_index_file";
flush logs;
ERROR HY000: Lost connection to MySQL server during query
# Restart the primary server
# Test if the index file has the correct data,
# i.e. binlog file name is added.
show binary logs;
Log_name	File_size
primary-bin.000006	#
primary-bin.000007	#
primary-bin.000008	#
primary-bin.000009	#
primary-bin.000010	#
primary-bin.000011	#
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
primary-bin.000016	#
primary-bin.000017	#
# Test case8: Set DEBUG POINT after rename index file when
#             purging the index file.
show binary logs;
Log_name	File_size
primary-bin.000006	#
primary-bin.000007	#
primary-bin.000008	#
primary-bin.000009	#
primary-bin.000010	#
primary-bin.000011	#
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
primary-bin.000016	#
primary-bin.000017	#
SET SESSION debug="+d,crash_create_after_rename_index_file";
purge binary logs TO 'primary-bin.000010';
ERROR HY000: Lost connection to MySQL server during query
# Restart the primary server
# Test if the index file has the correct data,
# i.e. requested binlog file names are removed.
show binary logs;
Log_name	File_size
primary-bin.000010	#
primary-bin.000011	#
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
primary-bin.000016	#
primary-bin.000017	#
primary-bin.000018	#
# Test case9: Set DEBUG POINT befor rename index file when
#             purging the index file.
show binary logs;
Log_name	File_size
primary-bin.000010	#
primary-bin.000011	#
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
primary-bin.000016	#
primary-bin.000017	#
primary-bin.000018	#
SET SESSION debug="+d,crash_create_before_rename_index_file";
purge binary logs TO 'primary-bin.000012';
ERROR HY000: Lost connection to MySQL server during query
# Restart the primary server
# Test if the index file has the correct data,
# i.e. requested binlog file names are removed.
show binary logs;
Log_name	File_size
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
primary-bin.000016	#
primary-bin.000017	#
primary-bin.000018	#
primary-bin.000019	#
# Test case10: Inject a fault to copy part content to the temp file
#              when purging the index file.
show binary logs;
Log_name	File_size
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
primary-bin.000016	#
primary-bin.000017	#
primary-bin.000018	#
primary-bin.000019	#
SET SESSION debug="+d,fault_injection_copy_part_file";
purge binary logs TO 'primary-bin.000014';
ERROR HY000: Lost connection to MySQL server during query
# Restart the primary server
# Test the index file is complete, although is not purged successfully.
show binary logs;
Log_name	File_size
primary-bin.000012	#
primary-bin.000013	#
primary-bin.000014	#
primary-bin.000015	#
primary-bin.000016	#
primary-bin.000017	#
primary-bin.000018	#
primary-bin.000019	#
primary-bin.000020	#
SET SESSION debug="";
SET GLOBAL binlog_error_action= ABORT_SERVER;
End of tests
