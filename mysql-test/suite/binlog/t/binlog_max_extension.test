
#  BUG#40611: MySQL cannot make a binary log after sequential number beyond 
#             unsigned long.
# 
#  Problem statement
#  =================
#
#    Extension for log file names might be created with negative 
#    numbers (when counter used would wrap around), causing server 
#    failure when incrementing -00001 (reaching number 000000 
#    extension).
#
#  Test
#  ====
#    This tests aims at testing the a patch that removes negatives 
#    numbers from log name extensions and checks that the server 
#    reports gracefully that the limit has been reached.
#
#    It instruments index file to point to a log file close to
#    the new maximum and calls flush logs to get warning.
#

call mtr.add_suppression("Next log extension: 2147483647. Remaining log filename extensions: 0.");
call mtr.add_suppression("Log filename extension number exhausted:");
call mtr.add_suppression("Can't generate a unique log-filename");
call mtr.add_suppression("The server was unable to create a new log file. "
                         "An incident event has been written to the binary "
                         "log which will stop the replicas.");
-- source include/have_log_bin.inc
RESET PRIMARY;

-- let $MYSQLD_DATADIR= `select @@datadir`

###############################################
# check hitting maximum file name extension:
###############################################

##########
# Prepare
##########

# 1. Stop primary server
-- exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
-- shutdown_server 
-- source include/wait_until_disconnected.inc

# 2. Prepare log and index file
-- copy_file $MYSQLD_DATADIR/primary-bin.index $MYSQLD_DATADIR/primary-bin.index.orig
-- copy_file $MYSQLD_DATADIR/primary-bin.000001 $MYSQLD_DATADIR/primary-bin.2147483646
-- append_file $MYSQLD_DATADIR/primary-bin.index
primary-bin.2147483646
EOF

# 3. Restart the server
-- exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
-- enable_reconnect
-- source include/wait_until_connected_again.inc

###########
# Assertion
###########

# assertion: should raise error
-- error ER_NO_UNIQUE_LOGFILE
FLUSH LOGS;

##############
# Clean up
##############

# 1. Stop the server
-- exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
-- shutdown_server 
-- source include/wait_until_disconnected.inc

# 2. Undo changes to index and log files
-- remove_file $MYSQLD_DATADIR/primary-bin.index
-- copy_file $MYSQLD_DATADIR/primary-bin.index.orig $MYSQLD_DATADIR/primary-bin.index
-- remove_file $MYSQLD_DATADIR/primary-bin.index.orig

-- remove_file $MYSQLD_DATADIR/primary-bin.2147483646
-- remove_file $MYSQLD_DATADIR/primary-bin.2147483647

# 3. Restart the server
-- exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
-- enable_reconnect
-- source include/wait_until_connected_again.inc
