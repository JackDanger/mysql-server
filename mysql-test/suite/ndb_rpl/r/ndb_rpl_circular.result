include/rpl_init.inc [topology=1->2->1]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
include/rpl_connect.inc [creating primary]
include/rpl_connect.inc [creating replica]
CREATE TABLE t1 (a int key, b int) ENGINE=ndb;
SHOW TABLES;
Tables_in_test
t1
INSERT INTO t1 VALUES (1,2);
INSERT INTO t1 VALUES (2,3);
SELECT * FROM t1 ORDER BY a;
a	b
1	2
2	3
include/check_replica_no_error.inc
include/check_replica_is_running.inc
Replica Binlog contains all ops as log_replica_updates is on
show variables like 'server_id';
Variable_name	Value
server_id	2
show variables like 'log_bin';
Variable_name	Value
log_bin	ON
show variables like 'log_replica_updates';
Variable_name	Value
log_replica_updates	ON
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
replica-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t1 (a int key, b int) ENGINE=ndb
replica-bin.000001	#	Query	#	#	BEGIN
replica-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
replica-bin.000001	#	Table_map	#	#	table_id: # (mysql.ndb_apply_status)
replica-bin.000001	#	Write_rows	#	#	table_id: #
replica-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
replica-bin.000001	#	Query	#	#	COMMIT
replica-bin.000001	#	Query	#	#	BEGIN
replica-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
replica-bin.000001	#	Table_map	#	#	table_id: # (mysql.ndb_apply_status)
replica-bin.000001	#	Write_rows	#	#	table_id: #
replica-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
replica-bin.000001	#	Query	#	#	COMMIT
include/check_replica_is_running.inc
SELECT * FROM t1 ORDER BY a;
a	b
1	2
2	3
include/check_replica_is_running.inc
Primary Binlog contains only Primary ops as log_replica_updates is off
show variables like 'server_id';
Variable_name	Value
server_id	1
show variables like 'log_bin';
Variable_name	Value
log_bin	ON
show variables like 'log_replica_updates';
Variable_name	Value
log_replica_updates	OFF
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Table_map	#	#	table_id: # (mysql.ndb_apply_status)
primary-bin.000001	#	Write_rows	#	#	table_id: #
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Query	#	#	COMMIT
STOP REPLICA;
DROP TABLE t1;
start replica;
create table t1 (a int primary key, b int) engine=ndb;
show variables like '%log_orig%';
Variable_name	Value
ndb_log_orig	ON
'Primary' has only replica's serverid entry 
select server_id, log_name from mysql.ndb_apply_status order by server_id;
server_id	log_name
2	replica-bin.000001
set global ndb_log_apply_status=On;
show variables like 'ndb_log_apply_status';
Variable_name	Value
ndb_log_apply_status	ON
'Replica' has only Primary's serverid entry
select server_id, log_name from mysql.ndb_apply_status order by server_id;
server_id	log_name
1	primary-bin.000001
'Replica' has following ndb_binlog_index entries
select inserts, updates, deletes, schemaops, orig_server_id from mysql.ndb_binlog_index order by position;
inserts	updates	deletes	schemaops	orig_server_id
1	0	0	0	1
1	0	0	0	2
set global ndb_log_apply_status=On;
show variables like 'ndb_log_apply_status';
Variable_name	Value
ndb_log_apply_status	ON
stop replica;
insert into t1 values (1,1);
'Replica' still has only Primary's serverid entry
select server_id, log_name from mysql.ndb_apply_status order by server_id;
server_id	log_name
1	primary-bin.000001
'Replica' has following ndb_binlog_index entries
select inserts, updates, deletes, schemaops, orig_server_id from mysql.ndb_binlog_index order by position;
inserts	updates	deletes	schemaops	orig_server_id
1	0	0	0	1
1	0	0	0	2
0	0	0	0	2
1	0	0	0	1
'Primary' still has only Replica's serverid entry
select server_id, log_name from mysql.ndb_apply_status order by server_id;
server_id	log_name
2	replica-bin.000001
start replica;
'Primary' now has own serverid entry as well.
select server_id, log_name from mysql.ndb_apply_status order by server_id;
server_id	log_name
1	primary-bin.000001
2	replica-bin.000001
'Replica' still only has 'Primary''s serverid entry
select server_id, log_name from mysql.ndb_apply_status order by server_id;
server_id	log_name
1	primary-bin.000001
Now create event originating at Replica
insert into t1 values (2,2);
'Replica' now also has its own serverid entry
select server_id, log_name from mysql.ndb_apply_status order by server_id;
server_id	log_name
1	primary-bin.000001
2	replica-bin.000001
stop replica;
set global ndb_log_apply_status=off;
set global ndb_log_apply_status=off;
stop replica;
drop table t1;
drop table t1;
include/rpl_end.inc
