# The include statement below is a temp one for tests that are yet to
#be ported to run with InnoDB,
#but needs to be kept for tests that would need MyISAM in future.
--source include/force_myisam_default.inc

--source include/have_ndb.inc
--source include/have_binlog_format_mixed_or_row.inc
--source suite/ndb_rpl/ndb_primary-replica.inc

# Test Replica initialisation of Ndb_replica_max_replicated_epoch status var

--connection replica
reset primary;
stop replica;

--connection primary
--echo Generate something in the Primarys Binlog
use test;
create table t1 (a int primary key, b int) engine=ndb;

insert into t1 values (1,1);

--connection replica
--echo Initial state
select * from mysql.ndb_apply_status;
--source suite/ndb_rpl/t/show_replica_max_replicated_epoch.inc
select @replica_server_id:= @@server_id;

--echo Default, no data, max replicated epoch will be 0.
reset replica;
start replica;
--connection primary
--sync_replica_with_primary
--connection replica
--replace_column 3 # 4 # 5 #
select server_id from mysql.ndb_apply_status order by server_id;
--source suite/ndb_rpl/t/show_replica_max_replicated_epoch.inc

--echo Default, load of own serverid from ndb_apply_status, should be 111
drop table test.t1;
stop replica;
reset replica;
insert into mysql.ndb_apply_status values (@replica_server_id, 111, 'Fictional log', 222, 333);
start replica;
--connection primary
--sync_replica_with_primary
--connection replica
--replace_column 3 # 4 # 5 #
select server_id from mysql.ndb_apply_status order by server_id;
--source suite/ndb_rpl/t/show_replica_max_replicated_epoch.inc

drop table test.t1;

--echo Check that reset replica resets Ndb_replica_max_replicated_epoch
stop replica;
--source suite/ndb_rpl/t/show_replica_max_replicated_epoch.inc
reset replica;
--source suite/ndb_rpl/t/show_replica_max_replicated_epoch.inc

--echo Multiple-channel, load highest of configured serverids, should be 222
set @other_local_server_id=@replica_server_id+1;
set @other_remote_server_id=@replica_server_id+2;
insert into mysql.ndb_apply_status values (@replica_server_id, 111, 'Fictional log', 222, 333);
insert into mysql.ndb_apply_status values (@other_local_server_id, 222, 'Fictional log', 222, 333);
insert into mysql.ndb_apply_status values (@other_remote_server_id, 444, 'Fictional log', 222, 333);

let $local_server_ids = `select @other_local_server_id`;

--eval CHANGE PRIMARY TO IGNORE_SERVER_IDS=($local_server_ids);
start replica;
--connection primary
--sync_replica_with_primary
--connection replica
--replace_column 3 # 4 # 5 #
select server_id from mysql.ndb_apply_status order by server_id;
--source suite/ndb_rpl/t/show_replica_max_replicated_epoch.inc

# Clean up
stop replica;
CHANGE PRIMARY TO IGNORE_SERVER_IDS= ();
start replica;
--connection primary
drop table test.t1;
sync_replica_with_primary;

--source include/rpl_end.inc

