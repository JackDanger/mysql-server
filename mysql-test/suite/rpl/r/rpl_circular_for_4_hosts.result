*** Set up circular replication on four servers *** 
include/rpl_init.inc [topology=1->2->3->4->1]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.

[connection server_4]
SET auto_increment_increment= 4;
SET auto_increment_offset= 4;
[connection server_3]
SET auto_increment_increment= 4;
SET auto_increment_offset= 3;
[connection server_2]
SET auto_increment_increment= 4;
SET auto_increment_offset= 2;
[connection server_1]
SET auto_increment_increment= 4;
SET auto_increment_offset= 1;
*** Preparing data ***
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b VARCHAR(100), c INT NOT NULL, PRIMARY KEY(a)) ENGINE=MyISAM;
CREATE TABLE t2 (a INT NOT NULL AUTO_INCREMENT, b VARCHAR(100), c INT NOT NULL, PRIMARY KEY(a)) ENGINE=InnoDB;
include/rpl_sync.inc
call mtr.add_suppression("Replica SQL.*Request to stop replica SQL Thread received while applying a group that has non-transactional changes; waiting for completion of the group");
call mtr.add_suppression("The replica coordinator and worker threads are stopped, possibly leaving data in inconsistent state");
call mtr.add_suppression("Replica SQL: Coordinator thread of multi-threaded replica is exiting seeing a failed Worker to apply an event");
call mtr.add_suppression("Replica worker thread has failed to apply an event");
call mtr.add_suppression("Replica SQL.*Duplicate entry .6. for key .PRIMARY.* Error_code: 1062");

*** Testing schema A->B->C->D->A ***

INSERT INTO t1(b,c) VALUES('A',1);
INSERT INTO t1(b,c) VALUES('B',1);
INSERT INTO t1(b,c) VALUES('C',1);
INSERT INTO t1(b,c) VALUES('D',1);
include/rpl_sync.inc
SELECT 'Primary A',a,b FROM t1 WHERE c = 1 ORDER BY a,b;
Primary A	a	b
Primary A	1	A
Primary A	2	B
Primary A	3	C
Primary A	4	D
SELECT 'Primary B',a,b FROM t1 WHERE c = 1 ORDER BY a,b;
Primary B	a	b
Primary B	1	A
Primary B	2	B
Primary B	3	C
Primary B	4	D
SELECT 'Primary C',a,b FROM t1 WHERE c = 1 ORDER BY a,b;
Primary C	a	b
Primary C	1	A
Primary C	2	B
Primary C	3	C
Primary C	4	D
SELECT 'Primary D',a,b FROM t1 WHERE c = 1 ORDER BY a,b;
Primary D	a	b
Primary D	1	A
Primary D	2	B
Primary D	3	C
Primary D	4	D

*** Testing schema A->B->D->A if C has failure ***

* Do failure for C and then make new connection B->D *
STOP REPLICA;
SET GLOBAL SQL_REPLICA_SKIP_COUNTER = 1;
include/start_replica.inc
INSERT INTO t1 VALUES(6,'C',2);
lock table t1 write  /* must block B_2^6 coming */;
INSERT INTO t1(b,c) VALUES('B',2);
unlock tables;
include/wait_for_replica_sql_error.inc [errno=1062]
INSERT INTO t1(b,c) VALUES('A',2);
INSERT INTO t1(b,c) VALUES('D',2);

* Data on servers (C failed) *
SELECT 'Primary A',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary A	a	b
Primary A	5	A
Primary A	8	D
SELECT 'Primary B',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary B	a	b
Primary B	5	A
Primary B	6	B
Primary B	8	D
SELECT 'Primary C',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary C	a	b
Primary C	6	C
SELECT 'Primary D',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary D	a	b
Primary D	8	D

* Reconfigure replication to schema A->B->D->A *
include/stop_replica_io.inc
include/stop_replica.inc
include/rpl_change_topology.inc [new topology=1->2->4->1,2->3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
include/start_replica.inc

* Check data inserted before failure *
SELECT 'Primary A',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary A	a	b
Primary A	5	A
Primary A	6	B
Primary A	8	D
SELECT 'Primary B',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary B	a	b
Primary B	5	A
Primary B	6	B
Primary B	8	D
SELECT 'Primary C',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary C	a	b
Primary C	6	C
SELECT 'Primary D',a,b FROM t1 WHERE c = 2 ORDER BY a,b;
Primary D	a	b
Primary D	5	A
Primary D	6	B
Primary D	8	D

* Check data inserted after failure *
INSERT INTO t1(b,c) VALUES('A',3);
INSERT INTO t1(b,c) VALUES('B',3);
INSERT INTO t1(b,c) VALUES('D',3);
include/rpl_sync.inc
SELECT 'Primary A',a,b FROM t1 WHERE c = 3 ORDER BY a,b;
Primary A	a	b
Primary A	9	A
Primary A	10	B
Primary A	12	D
SELECT 'Primary B',a,b FROM t1 WHERE c = 3 ORDER BY a,b;
Primary B	a	b
Primary B	9	A
Primary B	10	B
Primary B	12	D
SELECT 'Primary C',a,b FROM t1 WHERE c = 3 ORDER BY a,b;
Primary C	a	b
SELECT 'Primary D',a,b FROM t1 WHERE c = 3 ORDER BY a,b;
Primary D	a	b
Primary D	9	A
Primary D	10	B
Primary D	12	D

*** Testing restoring scheme A->B->C->D->A after failure ***

* Remove wrong event from C and restore B->C->D *
include/stop_replica.inc
DELETE FROM t1 WHERE a = 6;
include/start_replica.inc
RESET PRIMARY;
RESET REPLICA;
include/rpl_change_topology.inc [new topology=1->2->3->4->1]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
include/start_replica.inc
include/rpl_sync.inc

* Check data inserted before restoring schema A->B->C->D->A *
SELECT 'Primary A',a,b FROM t1 WHERE c IN (2,3) ORDER BY a,b;
Primary A	a	b
Primary A	5	A
Primary A	6	B
Primary A	8	D
Primary A	9	A
Primary A	10	B
Primary A	12	D
SELECT 'Primary B',a,b FROM t1 WHERE c IN (2,3) ORDER BY a,b;
Primary B	a	b
Primary B	5	A
Primary B	6	B
Primary B	8	D
Primary B	9	A
Primary B	10	B
Primary B	12	D
SELECT 'Primary C',a,b FROM t1 WHERE c IN (2,3) ORDER BY a,b;
Primary C	a	b
Primary C	5	A
Primary C	6	B
Primary C	8	D
Primary C	9	A
Primary C	10	B
Primary C	12	D
SELECT 'Primary D',a,b FROM t1 WHERE c IN (2,3) ORDER BY a,b;
Primary D	a	b
Primary D	5	A
Primary D	6	B
Primary D	8	D
Primary D	9	A
Primary D	10	B
Primary D	12	D

* Check data inserted after restoring schema A->B->C->D->A *
INSERT INTO t1(b,c) VALUES('A',4);
INSERT INTO t1(b,c) VALUES('B',4);
INSERT INTO t1(b,c) VALUES('C',4);
INSERT INTO t1(b,c) VALUES('D',4);
include/rpl_sync.inc
SELECT 'Primary A',a,b FROM t1 WHERE c = 4 ORDER BY a,b;
Primary A	a	b
Primary A	13	A
Primary A	14	B
Primary A	15	C
Primary A	16	D
SELECT 'Primary B',a,b FROM t1 WHERE c = 4 ORDER BY a,b;
Primary B	a	b
Primary B	13	A
Primary B	14	B
Primary B	15	C
Primary B	16	D
SELECT 'Primary C',a,b FROM t1 WHERE c = 4 ORDER BY a,b;
Primary C	a	b
Primary C	13	A
Primary C	14	B
Primary C	15	C
Primary C	16	D
SELECT 'Primary D',a,b FROM t1 WHERE c = 4 ORDER BY a,b;
Primary D	a	b
Primary D	13	A
Primary D	14	B
Primary D	15	C
Primary D	16	D

* Transactions with commits *
BEGIN;
BEGIN;
include/rpl_sync.inc
SELECT 'Primary A',b,COUNT(*) FROM t2 WHERE c = 1 GROUP BY b ORDER BY b;
Primary A	b	COUNT(*)
Primary A	A	100
Primary A	B	100
Primary A	C	100
Primary A	D	100
SELECT 'Primary B',b,COUNT(*) FROM t2 WHERE c = 1 GROUP BY b ORDER BY b;
Primary B	b	COUNT(*)
Primary B	A	100
Primary B	B	100
Primary B	C	100
Primary B	D	100
SELECT 'Primary C',b,COUNT(*) FROM t2 WHERE c = 1 GROUP BY b ORDER BY b;
Primary C	b	COUNT(*)
Primary C	A	100
Primary C	B	100
Primary C	C	100
Primary C	D	100
SELECT 'Primary D',b,COUNT(*) FROM t2 WHERE c = 1 GROUP BY b ORDER BY b;
Primary D	b	COUNT(*)
Primary D	A	100
Primary D	B	100
Primary D	C	100
Primary D	D	100

* Transactions with rollbacks *
BEGIN;
BEGIN;
include/rpl_sync.inc
SELECT 'Primary A',b,COUNT(*) FROM t2 WHERE c = 2 GROUP BY b ORDER BY b;
Primary A	b	COUNT(*)
Primary A	B	100
Primary A	D	100
SELECT 'Primary B',b,COUNT(*) FROM t2 WHERE c = 2 GROUP BY b ORDER BY b;
Primary B	b	COUNT(*)
Primary B	B	100
Primary B	D	100
SELECT 'Primary C',b,COUNT(*) FROM t2 WHERE c = 2 GROUP BY b ORDER BY b;
Primary C	b	COUNT(*)
Primary C	B	100
Primary C	D	100
SELECT 'Primary D',b,COUNT(*) FROM t2 WHERE c = 2 GROUP BY b ORDER BY b;
Primary D	b	COUNT(*)
Primary D	B	100
Primary D	D	100

*** Clean up ***
DROP TABLE t1,t2;
include/rpl_end.inc
