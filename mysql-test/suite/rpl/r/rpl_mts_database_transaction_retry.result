include/primary-replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection primary]
#
# Initialization the test
#
CREATE DATABASE db1;
CREATE DATABASE db2;
CREATE TABLE db1.t1(c1 INT PRIMARY KEY, c2 VARCHAR(4096)) ENGINE=InnoDB;
CREATE TABLE db1.t2(c1 INT PRIMARY KEY, c2 VARCHAR(4096)) ENGINE=InnoDB;
CREATE TABLE db2.t1(c1 INT PRIMARY KEY, c2 VARCHAR(4096)) ENGINE=InnoDB;
INSERT INTO db1.t1 VALUES(1, NULL), (10, NULL), (100, NULL);
INSERT INTO db1.t2 VALUES(1, NULL), (10, NULL), (100, NULL);
INSERT INTO db2.t1 VALUES(1, NULL), (10, NULL), (100, NULL);
include/sync_replica_sql_with_primary.inc
CALL mtr.add_suppression("Replica SQL for channel '':.*Lock wait timeout exceeded.*");
CALL mtr.add_suppression("Replica SQL for channel '': Worker . failed executing transaction.*");
CALL mtr.add_suppression("Replica SQL for channel '': .*Error_code: 1756");
CALL mtr.add_suppression("Replica SQL for channel '': worker thread retried transaction.*");
SET @saved_innodb_lock_wait_timeout = @@GLOBAL.innodb_lock_wait_timeout;
SET @saved_replica_parallel_workers = @@GLOBAL.replica_parallel_workers;
SET @saved_replica_parallel_type = @@GLOBAL.replica_parallel_type;
SET @saved_max_relay_log_size = @@GLOBAL.max_relay_log_size;
SET @saved_replica_transaction_retries = @@GLOBAL.replica_transaction_retries;
SET GLOBAL innodb_lock_wait_timeout = 1;
SET GLOBAL replica_parallel_workers = 2;
SET GLOBAL max_relay_log_size = 4096;
include/stop_replica_sql.inc
SET GLOBAL replica_parallel_type = "DATABASE";
include/start_replica_sql.inc
#
# Case 1: replica will stop if replica_transaction_retries is 0
#
SET GLOBAL replica_transaction_retries = 0;
BEGIN;
SELECT c1 FROM db1.t1 FOR UPDATE;
c1
1
10
100
[connection primary]
INSERT INTO db1.t1 VALUES(2, NULL);
INSERT INTO db2.t1 VALUES(2, NULL);
include/save_primary_pos.inc
[connection replica]
include/wait_for_replica_sql_error.inc [errno=1205]
include/assert.inc [Value 2 is not in db1.t1.]
ROLLBACK;
#
# Case 2: Replica will stop after retrying a transaction
#         replica_transaction_retries times.
#
SET GLOBAL replica_transaction_retries = 2;
include/start_replica_sql.inc
include/sync_replica_sql.inc
BEGIN;
SELECT c1 FROM db1.t2 FOR UPDATE;
c1
1
10
100
[connection primary]
BEGIN;
INSERT INTO db1.t1 VALUES(20, NULL);
INSERT INTO db1.t2 VALUES(20, NULL);
COMMIT;
INSERT INTO db2.t1 VALUES(20, NULL);
include/save_primary_pos.inc
[connection replica]
include/wait_for_replica_sql_error.inc [errno=1205]
include/assert.inc [Value 20 is not in db1.t1.]
ROLLBACK;
#
# Case 3: Replica worker will not stop after retring a transaction
#         sucessfully.
#
SET GLOBAL replica_transaction_retries = 10;
include/start_replica_sql.inc
include/sync_replica_sql.inc
include/check_replica_no_error.inc
BEGIN;
SELECT c1 FROM db1.t2 FOR UPDATE;
c1
1
10
20
100
[connection primary]
BEGIN;
# INSERT INTO db1.t1 VALUES(30, 4096'a')
# INSERT INTO db1.t1 VALUES(31, 4096'a')
SET @str= 'abc';
INSERT INTO db1.t2 VALUES(30, @str);
COMMIT;
INSERT INTO db2.t1 VALUES(30, NULL);
include/save_primary_pos.inc
[connection replica]
include/check_replica_no_error.inc
ROLLBACK;
include/sync_replica_sql.inc
include/check_replica_no_error.inc
include/rpl_diff.inc
include/rpl_diff.inc
include/rpl_diff.inc
[connection primary]
INSERT INTO db1.t1 VALUES(40, NULL);
INSERT INTO db2.t1 VALUES(40, NULL);
include/sync_replica_sql_with_primary.inc
#
# Case 4: Non-temporary error will stop replica workers without retrying
#
INSERT INTO db1.t1 VALUES(50, NULL);
[connection primary]
INSERT INTO db1.t1 VALUES(50, NULL);
include/save_primary_pos.inc
[connection replica]
include/wait_for_replica_sql_error.inc [errno=1062]
include/assert.inc [replica_retried_transactions should not increase]
DELETE FROM db1.t1 WHERE c1 = 50;
include/start_replica_sql.inc
include/sync_replica_sql.inc
#
# Cleanup
#
SET GLOBAL innodb_lock_wait_timeout = @saved_innodb_lock_wait_timeout;
SET GLOBAL replica_parallel_workers = @saved_replica_parallel_workers;
SET GLOBAL max_relay_log_size = @saved_max_relay_log_size;
SET GLOBAL replica_transaction_retries = @saved_replica_transaction_retries;
include/stop_replica_sql.inc
SET GLOBAL replica_parallel_type= @saved_replica_parallel_type;
include/start_replica_sql.inc
[connection primary]
DROP DATABASE db1;
DROP DATABASE db2;
include/rpl_end.inc
