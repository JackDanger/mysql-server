#
# set up primarys server_1 and server_3 with server_2 being a replica.
#.
include/rpl_init.inc [topology=1->2,3->2]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server_2]
#
#  1. Test ER_REPLICA_MULTIPLE_CHANNELS_CMD
#
CHANGE PRIMARY TO PRIMARY_USER = "root";
ERROR HY000: Multiple channels exist on the replica. Please provide channel name as an argument.
SHOW RELAYLOG EVENTS;
ERROR HY000: Multiple channels exist on the replica. Please provide channel name as an argument.
SELECT PRIMARY_POS_WAIT("dummy-bin.000001", 4);
ERROR HY000: Multiple channels exist on the replica. Please provide channel name as an argument.
START REPLICA UNTIL PRIMARY_LOG_FILE = "dummy-bin.0000001", PRIMARY_LOG_POS = 1729
#--error ER_REPLICA_MULTIPLE_CHANNELS_CMD
#SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS("1111-1111-1111-1111:1");
ERROR HY000: Multiple channels exist on the replica. Please provide channel name as an argument.
START REPLICA UNTIL PRIMARY_LOG_FILE = "dummy-bin.000001", PRIMARY_LOG_POS = 4;
ERROR HY000: Multiple channels exist on the replica. Please provide channel name as an argument.
#
# 2. Test errors of commands on an invalid channel
#
START REPLICA FOR CHANNEL "non_existent";
ERROR HY000: Replica channel 'non_existent' does not exist.
STOP REPLICA FOR CHANNEL "non_existent";
ERROR HY000: Replica channel 'non_existent' does not exist.
SHOW RELAYLOG EVENTS FOR CHANNEL "non_existent";
ERROR HY000: Replica channel 'non_existent' does not exist.
RESET REPLICA FOR CHANNEL "non_existent";
ERROR HY000: Replica channel 'non_existent' does not exist.
FLUSH RELAY LOGS FOR CHANNEL "non_existent";
ERROR HY000: Replica channel 'non_existent' does not exist.
# Following wait functions shall return for a non_existnent channels
SELECT PRIMARY_POS_WAIT("dummy-bin.00001",4, 3, "non_existtent");
PRIMARY_POS_WAIT("dummy-bin.00001",4, 3, "non_existtent")
NULL
SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS("1111-1111-1111-1111:1", 2, "non_existent");
WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS("1111-1111-1111-1111:1", 2, "non_existent")
NULL
#
#  3a) Test that proper error messages are sent out when invalid
#      channel names are given for change primary command.
#
CHANGE PRIMARY TO PRIMARY_HOST = "127.0.0.1", PRIMARY_USER = "root" FOR CHANNEL "A123456789A123456789A123456789A123456789A123456789A123456789A123456789";
ERROR HY000: Couldn't create channel: Channel name is either invalid or too long.
CHANGE PRIMARY TO PRIMARY_HOST = "127.0.0.1", PRIMARY_USER = "root" FOR CHANNEL "         ";
ERROR HY000: Couldn't create channel: Channel name is either invalid or too long.
#
#  3.b) Check that maximum channels permitted error is issued.
#
SET GLOBAL DEBUG = "+d, max_replication_channels_exceeded";
CHANGE PRIMARY TO PRIMARY_LOG_POS = 4 FOR CHANNEL "257th_channel";
ERROR HY000: Maximum number of replication channels allowed exceeded.
SET GLOBAL DEBUG=@old_debug;
#
#  3.c) Check that restricted channel names cannot be used
#
CHANGE PRIMARY TO PRIMARY_HOST="localhost", PRIMARY_PORT=10 FOR CHANNEL "group_replication_applier";
ERROR HY000: Couldn't create channel: Channel name is either invalid or too long.
CHANGE PRIMARY TO PRIMARY_HOST="localhost", PRIMARY_PORT=10 FOR CHANNEL "group_replication_recovery";
ERROR HY000: Couldn't create channel: Channel name is either invalid or too long.
# Assert that channels are not created for failed CHANGE PRIMARY command.
# and number of channels configured must be 2
include/assert.inc [there shall be only four rows representing 4 channels.]
include/rpl_end.inc
RESET REPLICA ALL FOR CHANNEL  'channel_1';
RESET REPLICA ALL FOR CHANNEL  'channel_3';
