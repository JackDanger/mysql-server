include/primary-replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection primary]
call mtr.add_suppression("Error 'Table 'test.t' doesn't exist' on query.");
call mtr.add_suppression("The replica coordinator and worker threads are stopped, possibly leaving data in inconsistent state.");
call mtr.add_suppression("Request to stop replica SQL Thread received while applying a group that has non-transactional changes;");
include/assert.inc [On primary, the table should return an empty set.]

# Setup MTS and perform testing on a fresh replica.

include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
SET @save_replica_parallel_workers=@@global.replica_parallel_workers;
SET @@global.replica_parallel_workers=0;
set @save_replica_transaction_retries= @@global.replica_transaction_retries;
include/start_replica.inc
include/assert.inc [In non-MTS mode(SQL thread), the table should return an empty set.]
include/stop_replica.inc
SET @@global.replica_parallel_workers=1;
set @save_replica_transaction_retries= @@global.replica_transaction_retries;
include/start_replica.inc
include/assert.inc [Worker_Id should be 1]
include/assert.inc [thread_name should should indicate worker thread.]
include/assert.inc [Service_State should be "ON" on a fresh replica server.]
include/assert.inc [Last_Seen_Transaction should show "" if no transaction applierd]
CREATE TABLE t1 (a INT);
DROP TABLE t1;
include/assert.inc [Last_Seen_Transaction should show "ANONYMOUS" if last transaction was anonymous.]
include/assert.inc [Value returned by SSS and PS table for Last_Error_Number should be same.]
include/assert.inc [Value returned by SSS and PS table for Last_Error_Message should both be empty.]
include/assert.inc [Value returned by PS table for Last_Error_Timestamp should be 0000-00-00 00:00:00.]

# Introduce an error in the worker thread and check for the correctness
# of error number, message and timestamp fields.

use test;
create table t(a int primary key);
drop table t;
insert into t values(1);
include/wait_for_replica_sql_error.inc [errno=1146]

# Extract the error related fields from SSS and PS table and compare
# them for correctness.

include/assert.inc [Value returned by SSS and PS table for Last_Error_Number should be same.]
Last_Error_Message
Worker 0 failed executing transaction 'ANONYMOUS' at primary log FILENAME, end_log_pos POSITION; Error 'Table 'test.t' doesn't exist' on query. Default database: 'test'. Query: 'insert into t values(1)'
include/assert.inc [Value returned by SSS and PS table for Last_Error_Timestamp should be same.]

# Verify that the error fields are preserved after STOP REPLICA.


# 1. Verify that thread_id changes to NULL and service_state to "off" on
#    STOP REPLICA.

include/assert.inc [After STOP REPLICA, thread_id should be NULL]
include/assert.inc [So, Service_State after STOP REPLICA should be "OFF".]

# 2. Extract the worker_id and the error related fields from SSS and PS
#    table and compare them. These fields should preserve their values.

include/assert.inc [Worker_Id should be 1]
include/assert.inc [Value returned by SSS and PS table for Last_Error_Number should be same.]
Last_Error_Message
Worker 0 failed executing transaction 'ANONYMOUS' at primary log FILENAME, end_log_pos POSITION; Error 'Table 'test.t' doesn't exist' on query. Default database: 'test'. Query: 'insert into t values(1)'
include/assert.inc [Value returned by SSS and PS table for Last_Error_Timestamp should be same.]
stop replica;
reset replica;
drop table t;
reset primary;

# Set up replication in gtid-mode=on and test 'Last_Seen_Transaction'
# field.

include/rpl_set_gtid_mode.inc [ON on servers 1,2]
stop replica;
Warnings:
Note	3084	Replication thread(s) for channel '' are already stopped.
change primary to primary_host='127.0.0.1',primary_port=PRIMARY_MYPORT, primary_user='root';
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
SET @@global.replica_parallel_workers=1;
set @save_replica_transaction_retries= @@global.replica_transaction_retries;
start replica;
create database d1;
create table d1.t1(a int);
insert into d1.t1 values(1);
select Last_Seen_Transaction from performance_schema.replication_applier_status_by_worker;
Last_Seen_Transaction	PRIMARY_UUID:3

# Verify that the value in 'Last_Seen_Transaction' field is preserved
# after STOP REPLICA.

include/stop_replica.inc
select Last_Seen_Transaction from performance_schema.replication_applier_status_by_worker;
Last_Seen_Transaction	PRIMARY_UUID:3
#
# BUG#20513547 REPLICATION_APPLIER_STATUS_BY_WORKER SHOWS
#              WRONG WORKER_ID WHEN REPLICA STOPS
#
SET @@GLOBAL.replica_parallel_workers = 3;
include/start_replica.inc
SELECT worker_id from performance_schema.replication_applier_status_by_worker;
worker_id
1
2
3
include/stop_replica.inc
SELECT worker_id from performance_schema.replication_applier_status_by_worker;
worker_id
1
2
3

# Cleanup.

DROP DATABASE d1;
set @@global.replica_parallel_workers= @save_replica_parallel_workers;
set @@global.replica_transaction_retries= @save_replica_transaction_retries;
include/start_replica.inc
include/rpl_set_gtid_mode.inc [OFF on servers 1,2]
include/rpl_end.inc
