stop replica;
drop table if exists t1,t2,t3,t4,t5,t6,t7,t8,t9;
reset primary;
reset replica;
drop table if exists t1,t2,t3,t4,t5,t6,t7,t8,t9;
start replica;
create table t1 (a int primary key);
insert into t1 values (1),(1);
ERROR 23000: Duplicate entry '1' for key 1
show replica status;
Replica_IO_State	Primary_Host	Primary_User	Primary_Port	Connect_Retry	Primary_Log_File	Read_Primary_Log_Pos	Relay_Log_File	Relay_Log_Pos	Relay_Primary_Log_File	Replica_IO_Running	Replica_SQL_Running	Replicate_Do_DB	Replicate_Ignore_DB	Replicate_Do_Table	Replicate_Ignore_Table	Replicate_Wild_Do_Table	Replicate_Wild_Ignore_Table	Last_Errno	Last_Error	Skip_Counter	Exec_Primary_Log_Pos	Relay_Log_Space	Until_Condition	Until_Log_File	Until_Log_Pos	Primary_SSL_Allowed	Primary_SSL_CA_File	Primary_SSL_CA_Path	Primary_SSL_Cert	Primary_SSL_Cipher	Primary_SSL_Key	Seconds_Behind_Primary
#	127.0.0.1	root	PRIMARY_PORT	1	primary-bin.000001	269	#	#	primary-bin.000001	Yes	Yes							0		0	269	#	None		0	No						#
show tables like 't1';
Tables_in_test (t1)
t1
drop table t1;
select get_lock('crash_lock%20C', 10);
get_lock('crash_lock%20C', 10)
1
create table t2 (a int primary key);
insert into t2 values(1);
create table t3 (id int);
insert into t3 values(connection_id());
 update t2 set a = a + 1 + get_lock('crash_lock%20C', 10);
select (@id := id) - id from t3;
(@id := id) - id
0
kill @id;
drop table t2,t3;
show binlog events from 102;
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	1	#	#
primary-bin.000001	#	Table_map	1	#	#
primary-bin.000001	#	Write_rows	1	#	#
primary-bin.000001	#	Query	1	#	#
primary-bin.000001	#	Query	1	#	#
primary-bin.000001	#	Table_map	1	#	#
primary-bin.000001	#	Write_rows	1	#	#
primary-bin.000001	#	Query	1	#	#
primary-bin.000001	#	Table_map	1	#	#
primary-bin.000001	#	Write_rows	1	#	#
primary-bin.000001	#	Table_map	1	#	#
primary-bin.000001	#	Update_rows	1	#	#
primary-bin.000001	#	Query	1	#	#
