include/primary-replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection primary]
create table t1(n int not null auto_increment primary key)ENGINE=InnoDB;
insert into t1 values (NULL);
drop table t1;
create table t1 (word char(20) not null)ENGINE=InnoDB;
load data infile 'LOAD_FILE' into table t1 ignore 1 lines;
select count(*) from t1;
count(*)
69
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	use `test`; create table t1(n int not null auto_increment primary key)ENGINE=InnoDB
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Xid	#	#	COMMIT /* XID */
primary-bin.000001	#	Query	#	#	use `test`; DROP TABLE `t1` /* generated by server */
primary-bin.000001	#	Query	#	#	use `test`; create table t1 (word char(20) not null)ENGINE=InnoDB
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Xid	#	#	COMMIT /* XID */
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	use `test`; create table t1(n int not null auto_increment primary key)ENGINE=InnoDB
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Xid	#	#	COMMIT /* XID */
flush logs;
create table t3 (a int)ENGINE=InnoDB;
select * from t1 order by 1 asc;
word
Aarhus
Aaron
Aaron
Ababa
Ababa
aback
aback
abaft
abaft
abandon
abandon
abandoned
abandoned
abandoning
abandoning
abandonment
abandonment
abandons
abandons
abase
abased
abasement
abasements
abases
abash
abashed
abashes
abashing
abasing
abate
abated
abatement
abatements
abater
abates
abating
Abba
abbe
abbey
abbeys
abbot
abbots
Abbott
abbreviate
abbreviated
abbreviates
abbreviating
abbreviation
abbreviations
Abby
abdomen
abdomens
abdominal
abduct
abducted
abduction
abductions
abductor
abductors
abducts
Abe
abed
Abel
Abelian
Abelson
Aberdeen
Abernathy
aberrant
aberration
include/sync_replica_sql_with_primary.inc
select * from t1 order by 1 asc;
word
Aarhus
Aaron
Aaron
Ababa
Ababa
aback
aback
abaft
abaft
abandon
abandon
abandoned
abandoned
abandoning
abandoning
abandonment
abandonment
abandons
abandons
abase
abased
abasement
abasements
abases
abash
abashed
abashes
abashing
abasing
abate
abated
abatement
abatements
abater
abates
abating
Abba
abbe
abbey
abbeys
abbot
abbots
Abbott
abbreviate
abbreviated
abbreviates
abbreviating
abbreviation
abbreviations
Abby
abdomen
abdomens
abdominal
abduct
abducted
abduction
abductions
abductor
abductors
abducts
Abe
abed
Abel
Abelian
Abelson
Aberdeen
Abernathy
aberrant
aberration
flush logs;
include/stop_replica.inc
include/start_replica.inc
create table t2 (n int)ENGINE=InnoDB;
insert into t2 values (1);
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	use `test`; create table t1(n int not null auto_increment primary key)ENGINE=InnoDB
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Xid	#	#	COMMIT /* XID */
primary-bin.000001	#	Query	#	#	use `test`; DROP TABLE `t1` /* generated by server */
primary-bin.000001	#	Query	#	#	use `test`; create table t1 (word char(20) not null)ENGINE=InnoDB
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Xid	#	#	COMMIT /* XID */
primary-bin.000001	#	Rotate	#	#	primary-bin.000002;pos=POS
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000002	#	Query	#	#	use `test`; create table t3 (a int)ENGINE=InnoDB
primary-bin.000002	#	Query	#	#	use `test`; create table t2 (n int)ENGINE=InnoDB
primary-bin.000002	#	Query	#	#	BEGIN
primary-bin.000002	#	Table_map	#	#	table_id: # (test.t2)
primary-bin.000002	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000002	#	Xid	#	#	COMMIT /* XID */
show binary logs;
Log_name	File_size
primary-bin.000001	#
primary-bin.000002	#
include/sync_replica_sql_with_primary.inc
show binary logs;
Log_name	File_size
replica-bin.000001	#
replica-bin.000002	#
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
replica-bin.000001	#	Query	#	#	use `test`; create table t1(n int not null auto_increment primary key)ENGINE=InnoDB
replica-bin.000001	#	Query	#	#	BEGIN
replica-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
replica-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
replica-bin.000001	#	Xid	#	#	COMMIT /* XID */
replica-bin.000001	#	Query	#	#	use `test`; DROP TABLE `t1` /* generated by server */
replica-bin.000001	#	Query	#	#	use `test`; create table t1 (word char(20) not null)ENGINE=InnoDB
replica-bin.000001	#	Query	#	#	BEGIN
replica-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
replica-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
replica-bin.000001	#	Xid	#	#	COMMIT /* XID */
replica-bin.000001	#	Query	#	#	use `test`; create table t3 (a int)ENGINE=InnoDB
replica-bin.000001	#	Rotate	#	#	replica-bin.000002;pos=POS
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
replica-bin.000002	#	Query	#	#	use `test`; create table t2 (n int)ENGINE=InnoDB
replica-bin.000002	#	Query	#	#	BEGIN
replica-bin.000002	#	Table_map	#	#	table_id: # (test.t2)
replica-bin.000002	#	Write_rows	#	#	table_id: # flags: STMT_END_F
replica-bin.000002	#	Xid	#	#	COMMIT /* XID */
include/check_replica_is_running.inc
show binlog events in 'replica-bin.000005' from 4;
ERROR HY000: Error when executing command SHOW BINLOG EVENTS: Could not find target log
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t3;
include/rpl_reset.inc
create table t1(a int auto_increment primary key, b int);
insert into t1 values (NULL, 1);
set insert_id=5;
insert into t1 values (NULL, last_insert_id()), (NULL, last_insert_id());
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	use `test`; create table t1(a int auto_increment primary key, b int)
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Query	#	#	COMMIT
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Query	#	#	COMMIT
select * from t1;
a	b
1	1
5	1
6	1
drop table t1;
include/sync_replica_sql_with_primary.inc
include/rpl_end.inc
