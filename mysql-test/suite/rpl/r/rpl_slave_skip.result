include/primary-replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection primary]
**** On Replica ****
STOP REPLICA;
include/wait_for_replica_to_stop.inc
**** On Primary ****
SET SESSION BINLOG_FORMAT=ROW;
CREATE TABLE t1 (a INT, b INT) ENGINE=MyISAM;
CREATE TABLE t2 (c INT, d INT) ENGINE=MyISAM;
INSERT INTO t1 VALUES (1,1),(2,4),(3,9);
INSERT INTO t2 VALUES (1,1),(2,8),(3,27);
UPDATE t1,t2 SET b = d, d = b * 2 WHERE a = c;
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t1 (a INT, b INT) ENGINE=MyISAM
primary-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t2 (c INT, d INT) ENGINE=MyISAM
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Query	#	#	COMMIT
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
primary-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Query	#	#	COMMIT
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
primary-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
primary-bin.000001	#	Update_rows	#	#	table_id: #
primary-bin.000001	#	Update_rows	#	#	table_id: # flags: STMT_END_F
primary-bin.000001	#	Query	#	#	COMMIT
SELECT * FROM t1;
a	b
1	1
2	8
3	27
SELECT * FROM t2;
c	d
1	2
2	16
3	54
**** On Replica ****
START REPLICA UNTIL PRIMARY_LOG_FILE='primary-bin.000001', PRIMARY_LOG_POS=PRIMARY_LOG_POS;
include/wait_for_replica_sql_to_stop.inc
include/check_replica_param.inc [Exec_Primary_Log_Pos]
include/check_replica_no_error.inc
SET GLOBAL SQL_REPLICA_SKIP_COUNTER=2;
START REPLICA;
include/wait_for_replica_to_start.inc
SELECT * FROM t1;
a	b
1	1
2	4
3	9
SELECT * FROM t2;
c	d
1	1
2	8
3	27
STOP REPLICA;
include/wait_for_replica_to_stop.inc
RESET REPLICA;
RESET PRIMARY;
SET SESSION BINLOG_FORMAT=STATEMENT;
SET @foo = 12;
INSERT INTO t1 VALUES(@foo, 2*@foo);
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
primary-bin.000001	#	Query	#	#	BEGIN
primary-bin.000001	#	User var	#	#	@`foo`=12
primary-bin.000001	#	Query	#	#	use `test`; INSERT INTO t1 VALUES(@foo, 2*@foo)
primary-bin.000001	#	Query	#	#	COMMIT
START REPLICA UNTIL PRIMARY_LOG_FILE='primary-bin.000001', PRIMARY_LOG_POS=PRIMARY_LOG_POS;
include/wait_for_replica_sql_to_stop.inc
SET GLOBAL SQL_REPLICA_SKIP_COUNTER=2;
START REPLICA;
include/wait_for_replica_to_start.inc
**** On Primary ****
DROP TABLE t1, t2;
include/sync_replica_sql_with_primary.inc
SET SESSION BINLOG_FORMAT=ROW;
SET AUTOCOMMIT=0;
CREATE TABLE t1 (a INT, b VARCHAR(20)) ENGINE=myisam;
CREATE TABLE t2 (a INT, b VARCHAR(20)) ENGINE=myisam;
CREATE TABLE t3 (a INT, b VARCHAR(20)) ENGINE=myisam;
INSERT INTO t1 VALUES (1,'primary/replica');
INSERT INTO t2 VALUES (1,'primary/replica');
INSERT INTO t3 VALUES (1,'primary/replica');
CREATE TRIGGER tr1 AFTER UPDATE on t1 FOR EACH ROW
BEGIN
INSERT INTO t2 VALUES (NEW.a,NEW.b);
DELETE FROM t2 WHERE a < NEW.a;
END|
CREATE TRIGGER tr2 AFTER INSERT on t2 FOR EACH ROW
BEGIN
UPDATE t3 SET a =2, b = 'primary only';
END|
**** On Replica ****
include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
**** On Primary ****
UPDATE t1 SET a = 2, b = 'primary only' WHERE a = 1;
DROP TRIGGER tr1;
DROP TRIGGER tr2;
INSERT INTO t1 VALUES (3,'primary/replica');
INSERT INTO t2 VALUES (3,'primary/replica');
INSERT INTO t3 VALUES (3,'primary/replica');
COMMIT;
SELECT * FROM t1 ORDER BY a;
a	b
2	primary only
3	primary/replica
SELECT * FROM t2 ORDER BY a;
a	b
2	primary only
3	primary/replica
SELECT * FROM t3 ORDER BY a;
a	b
2	primary only
3	primary/replica
*** On Replica ***
SET GLOBAL SQL_REPLICA_SKIP_COUNTER=2;
include/start_replica.inc
SELECT * FROM t1 ORDER BY a;
a	b
1	primary/replica
3	primary/replica
SELECT * FROM t2 ORDER BY a;
a	b
1	primary/replica
3	primary/replica
SELECT * FROM t3 ORDER BY a;
a	b
1	primary/replica
3	primary/replica
DROP TABLE t1, t2, t3;
include/sync_replica_sql_with_primary.inc
**** Case 2: Row binlog format and transactional tables ****
*** On Primary ***
CREATE TABLE t4 (a INT, b VARCHAR(20)) ENGINE=innodb;
CREATE TABLE t5 (a INT, b VARCHAR(20)) ENGINE=innodb;
CREATE TABLE t6 (a INT, b VARCHAR(20)) ENGINE=innodb;
**** On Replica ****
include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
*** On Primary ***
BEGIN;
INSERT INTO t4 VALUES (2, 'primary only');
INSERT INTO t5 VALUES (2, 'primary only');
INSERT INTO t6 VALUES (2, 'primary only');
COMMIT;
BEGIN;
INSERT INTO t4 VALUES (3, 'primary/replica');
INSERT INTO t5 VALUES (3, 'primary/replica');
INSERT INTO t6 VALUES (3, 'primary/replica');
COMMIT;
SELECT * FROM t4 ORDER BY a;
a	b
2	primary only
3	primary/replica
SELECT * FROM t5 ORDER BY a;
a	b
2	primary only
3	primary/replica
SELECT * FROM t6 ORDER BY a;
a	b
2	primary only
3	primary/replica
*** On Replica ***
SET GLOBAL SQL_REPLICA_SKIP_COUNTER=2;
include/start_replica.inc
SELECT * FROM t4 ORDER BY a;
a	b
3	primary/replica
SELECT * FROM t5 ORDER BY a;
a	b
3	primary/replica
SELECT * FROM t6 ORDER BY a;
a	b
3	primary/replica
**** On Replica ****
include/stop_replica.inc
*** On Primary ***
BEGIN;
INSERT INTO t4 VALUES (6, 'primary only');
INSERT INTO t5 VALUES (6, 'primary only');
INSERT INTO t6 VALUES (6, 'primary only');
COMMIT;
BEGIN;
INSERT INTO t4 VALUES (7, 'primary only');
INSERT INTO t5 VALUES (7, 'primary only');
INSERT INTO t6 VALUES (7, 'primary only');
COMMIT;
SELECT * FROM t4 ORDER BY a;
a	b
2	primary only
3	primary/replica
6	primary only
7	primary only
SELECT * FROM t5 ORDER BY a;
a	b
2	primary only
3	primary/replica
6	primary only
7	primary only
SELECT * FROM t6 ORDER BY a;
a	b
2	primary only
3	primary/replica
6	primary only
7	primary only
*** On Replica ***
SET GLOBAL SQL_REPLICA_SKIP_COUNTER=11;
include/start_replica.inc
SELECT * FROM t4 ORDER BY a;
a	b
3	primary/replica
SELECT * FROM t5 ORDER BY a;
a	b
3	primary/replica
SELECT * FROM t6 ORDER BY a;
a	b
3	primary/replica
include/stop_replica.inc
SET AUTOCOMMIT=0;
INSERT INTO t4 VALUES (4, 'primary only');
INSERT INTO t5 VALUES (4, 'primary only');
INSERT INTO t6 VALUES (4, 'primary only');
COMMIT;
INSERT INTO t4 VALUES (5, 'primary/replica');
INSERT INTO t5 VALUES (5, 'primary/replica');
INSERT INTO t6 VALUES (5, 'primary/replica');
COMMIT;
SELECT * FROM t4 ORDER BY a;
a	b
2	primary only
3	primary/replica
4	primary only
5	primary/replica
6	primary only
7	primary only
SELECT * FROM t5 ORDER BY a;
a	b
2	primary only
3	primary/replica
4	primary only
5	primary/replica
6	primary only
7	primary only
SELECT * FROM t6 ORDER BY a;
a	b
2	primary only
3	primary/replica
4	primary only
5	primary/replica
6	primary only
7	primary only
*** On Replica ***
SET GLOBAL SQL_REPLICA_SKIP_COUNTER=2;
include/start_replica.inc
SELECT * FROM t4 ORDER BY a;
a	b
3	primary/replica
5	primary/replica
SELECT * FROM t5 ORDER BY a;
a	b
3	primary/replica
5	primary/replica
SELECT * FROM t6 ORDER BY a;
a	b
3	primary/replica
5	primary/replica
DROP TABLE t4, t5, t6;
include/sync_replica_sql_with_primary.inc
**** Case 3: Statement logging format and LOAD DATA with non-transactional table ****
*** On Primary ***
CREATE TABLE t10 (a INT, b VARCHAR(20)) ENGINE=myisam;
*** On Replica ***
include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
*** On Primary ***
SET SESSION BINLOG_FORMAT=STATEMENT;
LOAD DATA INFILE 'MYSQLTEST_VARDIR/std_data/rpl_bug28618.dat' INTO TABLE t10 FIELDS TERMINATED BY '|';
SELECT * FROM t10 ORDER BY a;
a	b
1	primary only
2	primary only
3	primary only
*** On Replica ***
SET GLOBAL SQL_REPLICA_SKIP_COUNTER=2;
include/start_replica.inc
SELECT * FROM t10 ORDER BY a;
a	b
DROP TABLE t10;
include/sync_replica_sql_with_primary.inc
include/rpl_end.inc
