include/primary-replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the primary info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection primary]
CALL mtr.add_suppression('Duplicate entry');
[connection replica]
SET @saved_sync_relay_log_info= @@GLOBAL.sync_relay_log_info;
#
# sync_relay_log_info= 0, non-transactional (MyISAM) storage engine
#
SET @@GLOBAL.sync_relay_log_info= 0;
[connection primary]
include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
include/gtid_step_reset.inc
[connection primary]
[connection replica]
include/assert.inc [(MYISAM, sync_rli=0, step=1) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=1) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
include/start_replica.inc
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=MyISAM;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=2) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=2) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (1);
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=3) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=3) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
FLUSH LOCAL BINARY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=4) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=4) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=5) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=5) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=6) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=6) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=MyISAM;
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=7) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=7) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=8) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=8) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=9) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=9) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=10) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=10) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (2);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=11) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=11) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=12) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=12) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=13) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=13) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=14) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=14) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
SET @v=3;
INSERT INTO t1 VALUES (@v);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 User var event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=15) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=15) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=16) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=16) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=17) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=17) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=0, step=18) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=0, step=18) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
#
# sync_relay_log_info= 1, non-transactional (MyISAM) storage engine
#
SET @@GLOBAL.sync_relay_log_info= 1;
[connection primary]
include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
include/gtid_step_reset.inc
[connection primary]
[connection replica]
include/assert.inc [(MYISAM, sync_rli=1, step=1) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=1) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
include/start_replica.inc
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=MyISAM;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=2) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=2) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (1);
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=3) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=3) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
FLUSH LOCAL BINARY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=4) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=4) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=5) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=5) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=6) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=6) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=MyISAM;
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=7) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=7) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=8) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=8) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=9) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=9) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=10) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=10) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (2);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=11) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=11) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=12) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=12) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=13) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=13) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=14) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=14) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
SET @v=3;
INSERT INTO t1 VALUES (@v);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 User var event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=15) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=15) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=16) SQL thread did not synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=16) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=17) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=17) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(MYISAM, sync_rli=1, step=18) SQL thread synced primary binlog file]
include/assert.inc [(MYISAM, sync_rli=1, step=18) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
#
# sync_relay_log_info= 0, transactional (InnoDB) storage engine
#
SET @@GLOBAL.sync_relay_log_info= 0;
[connection primary]
include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
include/gtid_step_reset.inc
[connection primary]
[connection replica]
include/assert.inc [(INNODB, sync_rli=0, step=1) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=1) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
include/start_replica.inc
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=InnoDB;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=2) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=2) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (1);
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=3) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=3) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
FLUSH LOCAL BINARY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=4) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=4) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=5) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=5) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=6) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=6) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=InnoDB;
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=7) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=7) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=8) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=8) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=9) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=9) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=10) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=10) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (2);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=11) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=11) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=12) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=12) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=13) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=13) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=14) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=14) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
SET @v=3;
INSERT INTO t1 VALUES (@v);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 User var event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=15) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=15) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=16) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=16) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=17) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=17) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=18) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=18) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=InnoDB;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=19) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=19) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=20) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=20) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
BEGIN;
INSERT INTO t1 VALUES (1);
SET @v=2;
INSERT INTO t1 VALUES (@v);
COMMIT;
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 User var event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=21) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=21) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=22) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=22) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
include/assert.inc [(INNODB, sync_rli=0, step=22) Multi statement DML was not partially committed]
INSERT INTO t1 VALUES (2);
include/gtid_step_assert.inc [count=1, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
include/wait_for_replica_sql_error.inc [errno=1062]
[connection primary]
[connection replica]
include/assert.inc [(INNODB, sync_rli=0, step=23) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=23) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
DELETE FROM t1 WHERE c1 = 2;
include/gtid_step_assert.inc [count=1, only_count=0]
include/start_replica_sql.inc
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=24) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=24) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=0, step=25) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=0, step=25) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
#
# sync_relay_log_info= 1, transactional (InnoDB) storage engine
#
SET @@GLOBAL.sync_relay_log_info= 1;
[connection primary]
include/sync_replica_sql_with_primary.inc
include/stop_replica.inc
include/gtid_step_reset.inc
[connection primary]
[connection replica]
include/assert.inc [(INNODB, sync_rli=1, step=1) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=1) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
include/start_replica.inc
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=InnoDB;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=2) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=2) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (1);
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=3) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=3) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
FLUSH LOCAL BINARY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=4) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=4) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=5) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=5) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=6) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=6) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=InnoDB;
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=7) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=7) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=8) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=8) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=9) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=9) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=10) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=10) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
INSERT INTO t1 VALUES (2);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 Gtid event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=11) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=11) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=12) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=12) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=13) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=13) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=14) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=14) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
SET @v=3;
INSERT INTO t1 VALUES (@v);
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 User var event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=15) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=15) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=16) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=16) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=17) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=17) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=18) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=18) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
CREATE TABLE t1 (c1 int PRIMARY KEY) ENGINE=InnoDB;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=19) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=19) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
include/stop_replica.inc
include/start_replica_sql.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=20) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=20) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
[connection primary]
BEGIN;
INSERT INTO t1 VALUES (1);
SET @v=2;
INSERT INTO t1 VALUES (@v);
COMMIT;
[connection replica]
include/rpl_receive_event_count.inc [hang after 1 User var event]
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=21) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=21) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
FLUSH LOCAL RELAY LOGS;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=22) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=22) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
include/assert.inc [(INNODB, sync_rli=1, step=22) Multi statement DML was not partially committed]
INSERT INTO t1 VALUES (2);
include/gtid_step_assert.inc [count=1, only_count=0]
SET DEBUG_SYNC= 'now SIGNAL continue_after_queue_event';
[connection primary]
include/sync_replica_io_with_primary.inc
include/wait_for_replica_sql_error.inc [errno=1062]
[connection primary]
[connection replica]
include/assert.inc [(INNODB, sync_rli=1, step=23) SQL thread did not synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=23) SQL thread did not synced primary binlog position]
include/gtid_step_assert.inc [count=0, only_count=0]
DELETE FROM t1 WHERE c1 = 2;
include/gtid_step_assert.inc [count=1, only_count=0]
include/start_replica_sql.inc
[connection primary]
include/sync_replica_io_with_primary.inc
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=24) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=24) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection primary]
DROP TABLE t1;
[connection primary]
[connection replica]
include/wait_for_replica_param.inc [Replica_SQL_Running_State]
include/assert.inc [(INNODB, sync_rli=1, step=25) SQL thread synced primary binlog file]
include/assert.inc [(INNODB, sync_rli=1, step=25) SQL thread synced primary binlog position]
include/gtid_step_assert.inc [count=1, only_count=0]
[connection replica]
SET @@GLOBAL.sync_relay_log_info= @saved_sync_relay_log_info;
include/rpl_end.inc
