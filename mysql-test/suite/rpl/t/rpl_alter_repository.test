###############################################################################
# Check that replication will fail safely if we inappropriately change
# replication tables. Besides we check if some maintenance commands
# can run without a problem.
###############################################################################

--source include/not_group_replication_plugin.inc
--source include/no_valgrind_without_big.inc
--source include/not_gtid_enabled.inc
--source include/have_innodb.inc
--source include/not_mts_replica_parallel_workers.inc
--source include/not_relay_log_info_table.inc
--source include/not_primary_info_table.inc
--source include/primary-replica.inc
--connection replica
--source include/stop_replica.inc
SHOW CREATE TABLE mysql.replica_relay_log_info;
ALTER TABLE mysql.replica_relay_log_info ENGINE= Innodb;
SHOW CREATE TABLE mysql.replica_relay_log_info;
--let $saved_relay_repo= `SELECT @@global.relay_log_info_repository`
--let $saved_primary_repo= `SELECT @@global.primary_info_repository`
--let $saved_sync_primary= `SELECT @@global.sync_primary_info`
SET @@global.relay_log_info_repository="TABLE";
SET @@global.primary_info_repository="TABLE";
SET @@global.sync_primary_info= 1;
--source include/start_replica.inc

--connection primary
CREATE TABLE t_innodb (id INTEGER) engine= Innodb;

--connection replica
call mtr.add_suppression("Error writing relay log configuration.");
call mtr.add_suppression("Column count of mysql.replica_relay_log_info is wrong.");
call mtr.add_suppression("Error running query, replica SQL thread aborted.");
call mtr.add_suppression("Info table is not ready to be used.");
call mtr.add_suppression("Error writing primary configuration.");
call mtr.add_suppression("Failed to flush primary info.");
call mtr.add_suppression(" Error while checking replication metadata.");
call mtr.add_suppression("Failed to create or recover replication info repository.");
call mtr.add_suppression("Error in checking.* repository info type of");
call mtr.add_suppression("Error creating.*: Error checking repositories");
call mtr.add_suppression("Failed to create or recover replication info repositories.");
call mtr.add_suppression("An unexpected event sequence was detected by the IO thread");
call mtr.add_suppression("GTID_LOG_EVENT .* is not expected in an event stream");

###############################################################################
#           Checking if replication can fail safely (SQL Thread)
###############################################################################
#
# The test executes the following steps:
#  1 - Changes mysql.replica_relay_log_info and SQL Thread stops gracefully.
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#

#
#  1 - Changes mysql.replica_relay_log_info and SQL Thread stops gracefully.
#
--connection primary
INSERT INTO t_innodb VALUES (1), (2), (3);
--source include/sync_replica_sql_with_primary.inc
ALTER TABLE mysql.replica_relay_log_info DROP COLUMN Number_of_workers;
--connection primary
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection replica
# ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 1805
--let $replica_sql_errno= 1805
--let $show_replica_sql_error= 1
--source include/wait_for_replica_sql_error.inc
--source include/stop_replica_io.inc

#
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-primary-info=1 --primary-info-repository=TABLE --relay-log-info-repository=TABLE
--source include/rpl_restart_server.inc
--connection replica
--error ER_REPLICA_CONFIGURATION
START REPLICA SQL_THREAD;
ALTER TABLE mysql.replica_relay_log_info ADD COLUMN Number_of_workers INTEGER UNSIGNED NOT NULL AFTER Sql_delay;
UPDATE mysql.replica_relay_log_info SET Number_of_workers= 0;

#
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-primary-info=1 --primary-info-repository=TABLE --relay-log-info-repository=TABLE
--source include/rpl_restart_server.inc
--connection replica
--source include/start_replica.inc

#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#
--connection primary
INSERT INTO t_innodb VALUES (1), (2), (3);
--source include/sync_replica_sql_with_primary.inc
ALTER TABLE mysql.replica_relay_log_info DROP COLUMN Number_of_workers;
--connection primary
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection replica
# ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 1805
--let $replica_sql_errno= 1805
--let $show_replica_sql_error= 1
--source include/wait_for_replica_sql_error.inc
--source include/stop_replica_io.inc
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
START REPLICA SQL_THREAD;

--let $_replica_primary_host= query_get_value(SHOW REPLICA STATUS, Primary_Host, 1)
--let $_replica_primary_user= query_get_value(SHOW REPLICA STATUS, Primary_User, 1)
--let $_replica_primary_port= query_get_value(SHOW REPLICA STATUS, Primary_Port, 1)
--let $_replica_primary_log_file= query_get_value(SHOW REPLICA STATUS, Relay_Primary_Log_File, 1)
--let $_replica_primary_log_pos= query_get_value(SHOW REPLICA STATUS, Exec_Primary_Log_Pos, 1)
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
RESET REPLICA ALL;
--replace_result $_replica_primary_host PRIMARY_HOST $_replica_primary_user PRIMARY_USER $_replica_primary_port PRIMARY_PORT $_replica_primary_log_file PRIMARY_LOG_FILE $_replica_primary_log_pos PRIMARY_LOG_POS
--replace_column 2 ####
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
--eval CHANGE PRIMARY TO PRIMARY_HOST= '$_replica_primary_host', PRIMARY_USER= '$_replica_primary_user', PRIMARY_PORT= $_replica_primary_port, PRIMARY_LOG_FILE= '$_replica_primary_log_file', PRIMARY_LOG_POS= $_replica_primary_log_pos
ALTER TABLE mysql.replica_relay_log_info ADD COLUMN Number_of_workers INTEGER UNSIGNED NOT NULL AFTER Sql_delay;
UPDATE mysql.replica_relay_log_info SET Number_of_workers= 0;
RESET REPLICA ALL;
--replace_result $_replica_primary_host PRIMARY_HOST $_replica_primary_user PRIMARY_USER $_replica_primary_port PRIMARY_PORT $_replica_primary_log_file PRIMARY_LOG_FILE $_replica_primary_log_pos PRIMARY_LOG_POS
--replace_column 2 ####
--eval CHANGE PRIMARY TO PRIMARY_HOST= '$_replica_primary_host', PRIMARY_USER= '$_replica_primary_user', PRIMARY_PORT= $_replica_primary_port, PRIMARY_LOG_FILE= '$_replica_primary_log_file', PRIMARY_LOG_POS= $_replica_primary_log_pos
--source include/start_replica.inc
--connection primary
--source include/sync_replica_sql_with_primary.inc

###############################################################################
#          Checking if replication can fail safely (I/O Thread)
###############################################################################
#
# The test executes the following steps:
#  1 - Changes mysql.replica_primary_info and SQL Thread stops gracefully.
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#

#
#  1 - Changes mysql.replica_primary_info and SQL Thread stops gracefully.
#
--connection replica
ALTER TABLE mysql.replica_primary_info DROP COLUMN Enabled_auto_position;
--connection primary
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection replica
# ER_REPLICA_FATAL_ERROR
--let $replica_io_errno= 1593
--let $show_replica_io_error= 1
--source include/wait_for_replica_io_error.inc
--source include/stop_replica_sql.inc

#
#  2 - Shows that it is possible to restart the server although replication
#      is not properly configured and working.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-primary-info=1 --primary-info-repository=TABLE --relay-log-info-repository=TABLE
--source include/rpl_restart_server.inc
--connection replica
--error ER_REPLICA_CONFIGURATION
START REPLICA SQL_THREAD;
ALTER TABLE mysql.replica_primary_info ADD COLUMN Enabled_auto_position BOOLEAN NOT NULL COMMENT 'Indicates whether GTIDs will be used to retrieve events from the primary.' AFTER Ssl_crlpath;
UPDATE mysql.replica_primary_info SET Enabled_auto_position= 0;

#
#  3 - Shows that after fixing the problem the server can be properly
#      restared.
#
--let $rpl_server_number= 2
--let $rpl_server_parameters= --sync-primary-info=1 --primary-info-repository=TABLE --relay-log-info-repository=TABLE
--source include/rpl_restart_server.inc
--connection replica

--source include/start_replica.inc

#  4 - Shows that trying to fix the problem with START REPLICA, RESET REPLICA may
#      not work and requires to manually back up positions to restart
#      replication.
#
--connection replica
ALTER TABLE mysql.replica_primary_info DROP COLUMN Enabled_auto_position;
--connection primary
INSERT INTO t_innodb VALUES (1), (2), (3);
--connection replica
# ER_REPLICA_FATAL_ERROR
--let $replica_io_errno= 1593
--let $show_replica_io_error= 1
--source include/wait_for_replica_io_error.inc
--source include/stop_replica_sql.inc
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
START REPLICA SQL_THREAD;

--let $_replica_primary_host= query_get_value(SHOW REPLICA STATUS, Primary_Host, 1)
--let $_replica_primary_user= query_get_value(SHOW REPLICA STATUS, Primary_User, 1)
--let $_replica_primary_port= query_get_value(SHOW REPLICA STATUS, Primary_Port, 1)
--let $_replica_primary_log_file= query_get_value(SHOW REPLICA STATUS, Relay_Primary_Log_File, 1)
--let $_replica_primary_log_pos= query_get_value(SHOW REPLICA STATUS, Exec_Primary_Log_Pos, 1)
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
RESET REPLICA ALL;
--replace_result $_replica_primary_host PRIMARY_HOST $_replica_primary_user PRIMARY_USER $_replica_primary_port PRIMARY_PORT $_replica_primary_log_file PRIMARY_LOG_FILE $_replica_primary_log_pos PRIMARY_LOG_POS
--replace_column 2 ####
--error ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2
--eval CHANGE PRIMARY TO PRIMARY_HOST= '$_replica_primary_host', PRIMARY_USER= '$_replica_primary_user', PRIMARY_PORT= $_replica_primary_port, PRIMARY_LOG_FILE= '$_replica_primary_log_file', PRIMARY_LOG_POS= $_replica_primary_log_pos
ALTER TABLE mysql.replica_primary_info ADD COLUMN Enabled_auto_position BOOLEAN NOT NULL COMMENT 'Indicates whether GTIDs will be used to retrieve events from the primary.' AFTER Ssl_crlpath;
UPDATE mysql.replica_primary_info SET Enabled_auto_position= 0;
RESET REPLICA ALL;
--replace_result $_replica_primary_host PRIMARY_HOST $_replica_primary_user PRIMARY_USER $_replica_primary_port PRIMARY_PORT $_replica_primary_log_file PRIMARY_LOG_FILE $_replica_primary_log_pos PRIMARY_LOG_POS
--replace_column 2 ####
--eval CHANGE PRIMARY TO PRIMARY_HOST= '$_replica_primary_host', PRIMARY_USER= '$_replica_primary_user', PRIMARY_PORT= $_replica_primary_port, PRIMARY_LOG_FILE= '$_replica_primary_log_file', PRIMARY_LOG_POS= $_replica_primary_log_pos
--source include/start_replica.inc
--connection primary
--source include/sync_replica_sql_with_primary.inc

###############################################################################
# Checking ANALYZE TABLE, CHECK TABLE, CHECKSUM TABLE, OPTIMIZE TABLE,
#          REPAIR TABLE, SHOW CREATE TABLE and MYSQLDUMP
###############################################################################

#
# Check ANALYZE TABLE, CHECK TABLE and CHECKSUM TABLE
#
ANALYZE TABLE mysql.replica_primary_info, mysql.replica_relay_log_info;
CHECK TABLE mysql.replica_primary_info, mysql.replica_relay_log_info EXTENDED;

#
# Check OPTIMIZE TABLE and REPAIR TABLE
#
OPTIMIZE TABLE mysql.replica_primary_info, mysql.replica_relay_log_info;
REPAIR TABLE mysql.replica_primary_info, mysql.replica_relay_log_info EXTENDED;

#
# Check SHOW CREATE TABLE
#
SHOW CREATE TABLE mysql.replica_primary_info;
SHOW CREATE TABLE mysql.replica_relay_log_info;

#
# Check MYSQLDUMP
#
--echo # Search for occurrences of replica_primary_info in the output from mysqldump
--let $MYSQLD_DATADIR= `select @@datadir`
--exec $MYSQL_DUMP mysql replica_primary_info replica_relay_log_info > $MYSQLTEST_VARDIR/tmp/accessing_repository.sql
--let OUTF=$MYSQLTEST_VARDIR/tmp/accessing_repository.sql
perl;
  use strict;
  my $outf= $ENV{'OUTF'} or die "OUTF not set";
  open(FILE, "$outf") or die("Unable to open $outf: $!\n");
  my $count = () = grep(/CREATE TABLE `replica_primary_info`/gi,<FILE>);
  print "- Occurrences: $count\n";
  close(FILE);
EOF
--remove_file $MYSQLTEST_VARDIR/tmp/accessing_repository.sql

###############################################################################
# Cleaning up
###############################################################################
--connection primary
DROP TABLE t_innodb;
--source include/sync_replica_sql_with_primary.inc

--source include/stop_replica.inc

--disable_query_log
--eval SET @@global.relay_log_info_repository="$saved_relay_repo"
--eval SET @@global.primary_info_repository="$saved_primary_repo"
--eval SET @@global.sync_primary_info=$saved_sync_primary
--enable_query_log

--query_vertical SELECT * FROM mysql.replica_primary_info
--query_vertical SELECT * FROM mysql.replica_relay_log_info

--let $rpl_server_number= 2
--let $rpl_server_parameters=
--source include/rpl_restart_server.inc

--connection replica
--source include/start_replica.inc

--source include/rpl_end.inc
