###############################################################################
# Bug #19975697 REPLICA IO_THREAD MAY GET STUCK WHEN USING GTID AND LOW
# REPLICA_NET_TIMEOUTS
#
# Problem: Dump thread is not checking the necessity of heartbeat event
#  while it is scanning through the binary log files and skipping some groups
#  which were already present at Replica.
# Fix: Dump thread will check whether it is time to send an heartbeat event or
#  not before skipping an event. If so, it will send one to Replica.
###############################################################################

--source include/have_binlog_format_statement.inc
--source include/have_gtid.inc
--source include/have_debug_sync.inc
--source include/force_restart.inc
# Problem is reproduced only with gtid auto position protocol
--let $use_gtids=1
--let $rpl_skip_start_replica=1;
--source include/primary-replica.inc

# set replica_net_timeout to 10 seconds and then start replica threads
--connection replica
CHANGE PRIMARY TO PRIMARY_HEARTBEAT_PERIOD=5;
SET @save_old_replica_net_timeout=@@global.replica_net_timeout;
SET @@global.replica_net_timeout=10;
--source include/start_replica.inc
# In order to reproduce the bug with a smaller test data,
# inject 2 seconds delay after an skipped event.
--connection primary
SET @save_debug=@@global.debug;
SET GLOBAL DEBUG='+d,inject_2sec_sleep_when_skipping_an_event';

# Have some gtid transactions in binary log
# Below create and two insert statements would have created '6' sub events
#  # GTID 1
#  # CREATE
#  # GTID 2
#  # BEGIN
#  # INSERT
#  # COMMIT
#
CREATE TABLE t1(i INT) engine=innodb;
INSERT INTO t1 VALUES (1);

# Sync it with Replica
--source include/sync_replica_sql_with_primary.inc

# Stop the Replication
--source include/stop_replica.inc

# Create another gtid transaction at Primary
--connection primary
DROP TABLE t1;

# Start replica thread
--connection replica
--source include/start_replica.inc

# Now Dump thread-I/O thread communitcation protocol will detect that
# it does not have recent gtid transaction(drop table) and Primary
# should send that transaction to Replica. This detection will take
# 12 seconds because of the injected 2 seconds delay after every skipped
# event (Please see above) which is more than the replica_net_timeout.
# But now, after the fix, the server will check for necessity of sending an
# heartbeat event even while it is skipping the events, the below
# sync should not be timed out after the fix.
--connection primary
--source include/sync_replica_sql_with_primary.inc

# Cleanup
--connection primary
SET GLOBAL DEBUG=@save_debug;
--connection replica
SET @@global.replica_net_timeout=@save_old_replica_net_timeout;
--source include/rpl_end.inc
