# Test case for BUG #11733
-- source include/primary-replica.inc
-- source include/have_innodb.inc
-- source include/have_myisam.inc
-- source include/not_gtid_enabled.inc

call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");

# Create a test and replicate it to replica
connection primary;
create user test;
--source include/sync_replica_sql_with_primary.inc

# Setting the primary readonly :
# - the variable @@readonly is not replicated on the replica

connect (primary2,127.0.0.1,test,,test,$PRIMARY_MYPORT,);
connect (replica2,127.0.0.1,test,,test,$REPLICA_MYPORT,);

connection primary1;

create table t1(a int) engine=InnoDB;
create table t2(a int) engine=MyISAM;
insert into t1 values(1001);
insert into t2 values(2001);

connection primary;
set global read_only=1;

connection primary1;
select @@read_only;
select * from t1;
select * from t2;

--source include/sync_replica_sql_with_primary.inc
select @@read_only;
select * from t1;
select * from t2;

# - replication of transactions
connection primary;
set global read_only=0;

connection primary1;
BEGIN;

connection primary2;
BEGIN;

connection primary;
select @@read_only;
set global read_only=1;

connection primary1;
-- echo *** On SUPER USER connection ***
insert into t1 values(1002);
--disable_warnings
insert into t2 values(2002);
--enable_warnings

connection primary2;
-- echo *** On regular USER connection ***
--error ER_OPTION_PREVENTS_STATEMENT
insert into t1 values(1003);
--error ER_OPTION_PREVENTS_STATEMENT
insert into t2 values(2003);

connection primary1;
## works even with read_only=1, because primary1 is root
-- echo *** SUPER USER COMMIT (must succeed) *** 
COMMIT;

connection primary2;
-- echo *** regular USER COMMIT (must succeed - nothing to commit) *** 
COMMIT;

connection primary;
select @@read_only;
set global read_only=0;

connection primary1;
insert into t1 values(1004);
insert into t2 values(2004);

select * from t1;
select * from t2;

--source include/sync_replica_sql_with_primary.inc
select * from t1;
select * from t2;

# Setting the replica readonly : replication will pass
# 
connection replica1;
set global read_only=1;

connection replica;
select @@read_only;
# Make sure the replicated table is also transactional
show create table t1;
# Make sure the replicated table is not transactional
show create table t2;

connection primary;
insert into t1 values(1005);
insert into t2 values(2005);
select * from t1;
select * from t2;

--source include/sync_replica_sql_with_primary.inc
connection replica;
select * from t1;
select * from t2;

# Non root user can not write on the replica
connection replica2;
--error ER_OPTION_PREVENTS_STATEMENT
insert into t1 values(1006);
--error ER_OPTION_PREVENTS_STATEMENT
insert into t2 values(2006);

## Cleanup
connection primary;
drop user test;
drop table t1;
drop table t2;
--source include/sync_replica_sql_with_primary.inc
set global read_only=0;


--source include/rpl_end.inc
