--echo # Bug#47699 rpl.rpl_backup_block fails sporadically
--echo #
--echo # START REPLICA released the lock and returned before it cleared the error,
--echo # so there is a possibility that Replica_SQL_Error is not 0.
--source include/not_group_replication_plugin.inc
source include/have_debug_sync.inc;
source include/primary-replica.inc;

--echo [on replica]
connection replica;

CALL mtr.add_suppression("Replica: Table 't1' already exists Error_code: 1050");
CALL mtr.add_suppression("Replica SQL for channel '': .*Error .Table .t1. already exists. on query.* Error_code: 1050");
call mtr.add_suppression("The replica coordinator and worker threads are stopped, possibly leaving data in inconsistent state");

--echo # The statement makes SQL thread to fail.
CREATE TABLE t1(c1 INT);

--echo [on primary]
connection primary;
CREATE TABLE t1(c1 INT);

--echo [on replica]
connection replica;
# ERROR: Table already exists.
let $replica_sql_errno= 1050;
source include/wait_for_replica_sql_error.inc;

DROP TABLE t1;

--echo # Block SQL thread immediately after it starts.
SET DEBUG_SYNC='after_start_replica WAIT_FOR signal.continue';
START REPLICA SQL_THREAD;
source include/wait_for_replica_sql_to_start.inc;
--echo # Check Replica_SQL_Error, there should not be an error.
source include/check_replica_no_error.inc;

--echo # Resume SQL thread
SET DEBUG_SYNC="now SIGNAL signal.continue";

--echo [on primary]
connection primary;
DROP TABLE t1;
source include/rpl_end.inc;
