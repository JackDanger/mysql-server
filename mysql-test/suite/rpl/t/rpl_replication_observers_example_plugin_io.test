#
# The purpose of this test is to demonstrate the capabilities of the
# Replication Observers example plugin and to assess its correct functionality
#
# The plugin is only loaded on replica server to capture relay log notifications.
#
# Since one wants to test only the hook execution in place, a test
# plugin was created to serve those needs. The plugin will print once
# if the hook method is executed and the test will verify if the hook
# was called.
#
# This test will use the hooks related with Event control and SQL/IO
# thread handling.
# - after_reset_replica: Called after a RESET REPLICA is invoked
# - thread_start: Called when the IO Thread starts
# - before_request_transmit: Called before the replica requests the events
#                            from a primary.
# - after_read_event: Called after an event is received.
# - after_queue_event: Called after an event is queued.
# - applier_stop: Called after the SQL Thread is stopped
# - thread_stop: Called after the IO Thread is stopped.
#

--source include/have_replication_observers_example_plugin.inc
--source include/not_group_replication_plugin.inc
--source include/not_embedded.inc
--source include/have_binlog_format_mixed.inc
--source include/primary-replica.inc

--connection replica
--echo #
--echo # Stop replica and install plugin.
--echo #
--source include/stop_replica.inc
--source include/install_replication_observers_example.inc

--echo #
--echo # Cause a reset replica notification.
--echo #
RESET REPLICA;

--echo #
--echo # Cause a connect notification.
--echo #
--source include/start_replica.inc

--echo #
--echo # Execute some transactions on primary to cause the other notifications.
--echo #
--connection primary

CREATE TABLE t1 (c1 INT) Engine=InnoDB;
INSERT t1 VALUES(1);
DROP TABLE t1;
--source include/sync_replica_sql_with_primary.inc

--echo #
--echo # Stop replica and uninstall plugin.
--echo #
--source include/stop_replica.inc
--source include/uninstall_replication_observers_example.inc

--echo #
--echo # Verify that all relay hooks were called.
--echo #
--let $grep_file=$MYSQLTEST_VARDIR/tmp/rpl_replication_observers_example_plugin_io.err
--let $grep_pattern=replication_observers_example_plugin:binlog_relay_after_reset_replica
--source include/grep_pattern.inc

--let $grep_file=$MYSQLTEST_VARDIR/tmp/rpl_replication_observers_example_plugin_io.err
--let $grep_pattern=replication_observers_example_plugin:binlog_relay_thread_start
--source include/grep_pattern.inc

--let $grep_file=$MYSQLTEST_VARDIR/tmp/rpl_replication_observers_example_plugin_io.err
--let $grep_pattern=replication_observers_example_plugin:binlog_relay_before_request_transmit
--source include/grep_pattern.inc

--let $grep_file=$MYSQLTEST_VARDIR/tmp/rpl_replication_observers_example_plugin_io.err
--let $grep_pattern=replication_observers_example_plugin:binlog_relay_after_read_event
--source include/grep_pattern.inc

--let $grep_file=$MYSQLTEST_VARDIR/tmp/rpl_replication_observers_example_plugin_io.err
--let $grep_pattern=replication_observers_example_plugin:binlog_relay_after_queue_event
--source include/grep_pattern.inc

--let $grep_file=$MYSQLTEST_VARDIR/tmp/rpl_replication_observers_example_plugin_io.err
--let $grep_pattern=replication_observers_example_plugin:binlog_relay_applier_stop
--source include/grep_pattern.inc

--let $grep_file=$MYSQLTEST_VARDIR/tmp/rpl_replication_observers_example_plugin_io.err
--let $grep_pattern=replication_observers_example_plugin:binlog_relay_thread_stop
--source include/grep_pattern.inc

--let $rpl_only_running_threads= 1
--source include/rpl_end.inc
