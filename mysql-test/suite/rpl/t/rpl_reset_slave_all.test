--source include/not_group_replication_plugin.inc
--source include/have_binlog_format_row.inc
--source include/primary-replica.inc

###############################################################################
#   BUG#21107331 RESET REPLICA ALL DOESN'T RESETS REPLICA_RETRIED_TRANSACTIONS
#   BUG#21111229 RESET REPLICA ALL BEHAVES DIFFERENT FOR DEFAULT AND
#                NON-DEFAULT CHANNELS
#
#   Verify that replica_retried_transactions is reset to 0 after RESET REPLICA ALL
#   Step 1. Generates an innodb row lock timeout to increase
#           replica_retried_transactions
#   Step 2. RESET REPLICA
#   Step 3. check replica_retried_transactions is 0
###############################################################################

CREATE TABLE t1 (c1 INT KEY) ENGINE=InnoDB;

# It is used by the CHANGE PRIMARY below
--source include/save_binlog_position.inc

--source include/sync_replica_sql_with_primary.inc

--source include/stop_replica.inc
SET @saved_replica_transaction_retries = @@GLOBAL.replica_transaction_retries;
SET @saved_innodb_lock_wait_timeout = @@GLOBAL.innodb_lock_wait_timeout;
SET GLOBAL replica_transaction_retries = 1;
SET GLOBAL innodb_lock_wait_timeout = 1;
--source include/start_replica.inc

# It blocks replica applier which applies INSERT INTO t1 VALUES(1);
BEGIN;
INSERT INTO t1 VALUES(1);

--source include/rpl_connection_primary.inc
INSERT INTO t1 VALUES(1);

# Replica sql stops after retrying the transaction 1 times.
--source include/rpl_connection_replica1.inc
--let $replica_sql_errno=1205
--source include/wait_for_replica_sql_error.inc
--source include/stop_replica_io.inc

# The warnings are generated by MTS
CALL mtr.add_suppression(".*worker thread retried transaction 1 time.*");
CALL mtr.add_suppression(".*The replica coordinator and worker threads are "
                         "stopped, possibly leaving data in inconsistent.*");
--let $assert_text= replica_retried_transactions should be greater than 0
--let $assert_status_name= replica_retried_transactions
--let $assert_status_value= 0
--let $assert_comparator= >=
--source include/assert_status.inc

RESET REPLICA ALL;

--let $assert_text= replica_retried_transactions should be 0
--let $assert_status_name= replica_retried_transactions
--let $assert_status_value= 0
--source include/assert_status.inc

--source include/rpl_connection_replica.inc
# rollback the INSERT which is used to block replica applier.
ROLLBACK;

--echo #
--echo # Cleanup
--echo #
SET GLOBAL replica_transaction_retries = @saved_replica_transaction_retries;
SET GLOBAL innodb_lock_wait_timeout = @saved_innodb_lock_wait_timeout;

--replace_result $binlog_file BINLOG_FILE $binlog_position BINLOG_POS $PRIMARY_MYPORT PRIMARY_PORT
eval CHANGE PRIMARY TO PRIMARY_LOG_FILE = "$binlog_file", PRIMARY_LOG_POS = $binlog_position,
     PRIMARY_USER='root', PRIMARY_HOST='127.0.0.1', PRIMARY_PORT=$PRIMARY_MYPORT;
--source include/start_replica.inc

--source include/rpl_connection_primary.inc
DROP TABLE t1;
--source include/rpl_end.inc
