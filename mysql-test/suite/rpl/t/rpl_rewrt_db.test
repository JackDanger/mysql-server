# TBF - difference in row level logging
-- source include/have_binlog_format_mixed_or_statement.inc
-- source include/primary-replica.inc

--disable_warnings
drop database if exists mysqltest1;
--enable_warnings
create database mysqltest1;

use mysqltest1;
create table t1 (a int);
insert into t1 values(9);
select * from mysqltest1.t1;
--source include/sync_replica_sql_with_primary.inc
show databases like 'mysqltest1'; # should be empty
select * from test.t1;
# cleanup
connection primary;
drop table t1;
drop database mysqltest1;
--source include/sync_replica_sql_with_primary.inc

#
# BUG#6353:
#   Option --replicate-rewrite-db should work together with LOAD DATA INFILE
#

connection replica;
--disable_warnings
drop database if exists rewrite;
--enable_warnings
create database rewrite;

connection primary;
use test;
create table t1 (a date, b date, c date not null, d date);
load data infile '../../std_data/loaddata1.dat' ignore into table t1 fields terminated by ',';
load data infile '../../std_data/loaddata1.dat' into table t1 fields terminated by ',' IGNORE 2 LINES;
--source include/sync_replica_sql_with_primary.inc

connection replica;
select * from rewrite.t1;

connection primary;
truncate table t1;
load data infile '../../std_data/loaddata1.dat' ignore into table t1 fields terminated by ',' LINES STARTING BY ',' (b,c,d);
--source include/sync_replica_sql_with_primary.inc

connection replica;
select * from rewrite.t1;

connection primary;
drop table t1;
create table t1 (a text, b text);
load data infile '../../std_data/loaddata2.dat' ignore into table t1 fields terminated by ',' enclosed by '''';
--source include/sync_replica_sql_with_primary.inc

connection replica;
select concat('|',a,'|'), concat('|',b,'|') from rewrite.t1;

connection primary;
drop table t1;
create table t1 (a int, b char(10));
load data infile '../../std_data/loaddata3.dat' ignore into table t1 fields terminated by '' enclosed by '' ignore 1 lines;
--source include/sync_replica_sql_with_primary.inc

connection replica;
select * from rewrite.t1;

connection primary;
truncate table t1;
load data infile '../../std_data/loaddata4.dat' ignore into table t1 fields terminated by '' enclosed by '' lines terminated by '' ignore 1 lines;
--source include/sync_replica_sql_with_primary.inc

connection replica;
# The empty line last comes from the end line field in the file
select * from rewrite.t1;

set sql_log_bin= 0;
drop database rewrite;
set sql_log_bin= 1;

connection primary;
set sql_log_bin= 0;
drop table t1;
set sql_log_bin= 1;

# End of 4.1 tests

--echo
--echo ****
--echo **** Bug #46861 Auto-closing of temporary tables broken by replicate-rewrite-db
--echo ****
--echo

--echo ****
--echo **** Preparing the environment
--echo ****
connection primary;

connect (con_temp_03,127.0.0.1,root,,test,$PRIMARY_MYPORT,);
connect (con_temp_02,127.0.0.1,root,,test,$PRIMARY_MYPORT,);
connect (con_temp_01,127.0.0.1,root,,test,$PRIMARY_MYPORT,);

connection primary;
SET sql_log_bin= 0;
CREATE DATABASE database_primary_temp_01;
CREATE DATABASE database_primary_temp_02;
CREATE DATABASE database_primary_temp_03;
SET sql_log_bin= 1;

connection replica;
SET sql_log_bin= 0;
CREATE DATABASE database_replica_temp_01;
CREATE DATABASE database_replica_temp_02;
CREATE DATABASE database_replica_temp_03;
SET sql_log_bin= 1;

--echo
--echo ****
--echo **** Creating temporary tables on different databases with different connections
--echo ****
--echo **** con_temp_01 --> creates
--echo ****                  t_01_01_temp on database_primary_temp_01
--echo ****
--echo **** con_temp_02 --> creates
--echo ****                  t_01_01_temp on database_primary_temp_01
--echo ****                  t_02_01_temp, t_02_02_temp on database_primary_temp_02
--echo ****
--echo **** con_temp_03 --> creates
--echo ****                  t_01_01_temp on database_primary_temp_01
--echo ****                  t_02_01_temp, t_02_02_temp on database_primary_temp_02
--echo ****                  t_03_01_temp, t_03_02_temp, t_03_03_temp on database_primary_temp_03
--echo ****

--echo
--echo con_temp_01
--echo
connection con_temp_01;
USE database_primary_temp_01;
CREATE TEMPORARY TABLE t_01_01_temp(a int);
INSERT INTO t_01_01_temp VALUES(1);

--echo
--echo con_temp_02
--echo
connection con_temp_02;
USE database_primary_temp_01;
CREATE TEMPORARY TABLE t_01_01_temp(a int);
INSERT INTO t_01_01_temp VALUES(1);
USE database_primary_temp_02;
CREATE TEMPORARY TABLE t_02_01_temp(a int);
INSERT INTO t_02_01_temp VALUES(1);
CREATE TEMPORARY TABLE t_02_02_temp(a int);
INSERT INTO t_02_02_temp VALUES(1);

--echo
--echo con_temp_03
--echo
connection con_temp_03;
USE database_primary_temp_01;
CREATE TEMPORARY TABLE t_01_01_temp(a int);
INSERT INTO t_01_01_temp VALUES(1);
USE database_primary_temp_02;
CREATE TEMPORARY TABLE t_02_01_temp(a int);
INSERT INTO t_02_01_temp VALUES(1);
CREATE TEMPORARY TABLE t_02_02_temp(a int);
INSERT INTO t_02_02_temp VALUES(1);
USE database_primary_temp_03;
CREATE TEMPORARY TABLE t_03_01_temp(a int);
INSERT INTO t_03_01_temp VALUES(1);
CREATE TEMPORARY TABLE t_03_02_temp(a int);
INSERT INTO t_03_02_temp VALUES(1);
CREATE TEMPORARY TABLE t_03_03_temp(a int);
INSERT INTO t_03_03_temp VALUES(1);

--echo
--echo **** Dropping the connections
--echo **** To be sure that the DROP statements have been logged, we make
--echo **** sure that the number of open temporary tables at replica becomes
--echo **** zero. If not,the test will time out.
--echo
connection primary;
--source include/sync_replica_sql_with_primary.inc
connection replica;
show status like 'Replica_open_temp_tables';

connection primary;
flush logs;

connection con_temp_01;
disconnect con_temp_01;
--source include/wait_until_disconnected.inc

connection con_temp_02;
disconnect con_temp_02;
--source include/wait_until_disconnected.inc

connection con_temp_03;
disconnect con_temp_03;
--source include/wait_until_disconnected.inc

--echo
--echo **** Wait until number of open temporary tables at replica becomes zero
--echo
connection replica;
--let $status_var= Replica_open_temp_tables
--let $status_var_value= 0
# The below include file accepts time in units of tenths of seconds.
# Hence 3 minutes = 1800.
--let $status_timeout= 1800
--source include/wait_for_status_var.inc

--echo
--echo **** Check if every drop temporary table command is prepended with "use"
--echo
connection primary;
--let $current_binlog_file= query_get_value(SHOW PRIMARY STATUS,File,1)
--let $count_drop= 0
--let $event_number= 1
--let $binlog_event= query_get_value(SHOW BINLOG EVENTS IN '$current_binlog_file', Info, $event_number)
while($binlog_event != No such row)
{
    if(`SELECT INSTR("$binlog_event", "DROP /*!40005 TEMPORARY */ TABLE IF EXISTS") AND INSTR("$binlog_event", "use") <> 0`)
    {
      --inc $count_drop
    }
    --inc $event_number
    --let $binlog_event=query_get_value(SHOW BINLOG EVENTS IN '$current_binlog_file', Info, $event_number)
}

--let $assert_cond= $count_drop= 6
--let $assert_text= The number of drop temporary table events in binlog should be 6
--source include/assert.inc

--echo ****
--echo **** Cleaning up the test case
--echo ****
connection primary;
SET sql_log_bin= 0;
DROP DATABASE database_primary_temp_01;
DROP DATABASE database_primary_temp_02;
DROP DATABASE database_primary_temp_03;
SET sql_log_bin= 1;

connection replica;
SET sql_log_bin= 0;
DROP DATABASE database_replica_temp_01;
DROP DATABASE database_replica_temp_02;
DROP DATABASE database_replica_temp_03;
SET sql_log_bin= 1;

connection primary;
--source include/sync_replica_sql_with_primary.inc

# end of 5.0 tests
--source include/rpl_end.inc
