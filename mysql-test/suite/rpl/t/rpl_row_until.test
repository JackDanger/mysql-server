-- source include/not_ndb_default.inc
--source include/not_group_replication_plugin.inc
-- source include/have_binlog_format_row.inc
--source include/not_gtid_enabled.inc
--source include/not_mts_replica_parallel_workers.inc
--source include/primary-replica.inc

##############################################################################
# The test is dependent on binlog positions. The test is divided into two
# sections. The first section checks START REPLICA UNTIL PRIMARY_LOG_FILE =
# 'log_name', PRIMARY_LOG_POS = log_pos followed by a couple of failure
# scenarios. The second section checks START REPLICA UNTIL RELAY_LOG_FILE =
# 'log_name', RELAY_LOG_POS = log_pos.
##############################################################################

# Create some events on primary
connection primary;
CREATE TABLE t1(n INT NOT NULL AUTO_INCREMENT PRIMARY KEY);
INSERT INTO t1 VALUES (1),(2),(3),(4);
# Save primary log position before query DROP TABLE t1
let $primary_pos_drop_t1= query_get_value(SHOW PRIMARY STATUS, Position, 1);
let $primary_log_file= query_get_value(SHOW PRIMARY STATUS, File, 1);
DROP TABLE t1;
# Save primary log position for query DROP TABLE t1
save_primary_pos;

# Save primary log position for query CREATE TABLE t2
let $primary_pos_create_t2= query_get_value(SHOW PRIMARY STATUS, Position, 1);
CREATE TABLE t2(n INT NOT NULL AUTO_INCREMENT PRIMARY KEY);
#show binlog events;

INSERT INTO t2 VALUES (1),(2);
# Save primary log position for query INSERT INTO t2 VALUES (1),(2);
let $primary_pos_insert1_t2= query_get_value(SHOW PRIMARY STATUS, Position, 1);
INSERT INTO t2 VALUES (3),(4);
DROP TABLE t2;
# Save primary log position for query DROP TABLE t2;
let $primary_pos_drop_t2= query_get_value(SHOW PRIMARY STATUS, Position, 1);
--source include/sync_replica_sql_with_primary.inc
#show binlog events;

--source include/stop_replica.inc
# Reset replica.
RESET REPLICA;
--disable_query_log
--replace_column 2 ####
eval CHANGE PRIMARY TO PRIMARY_USER='root', PRIMARY_CONNECT_RETRY=1, PRIMARY_HOST='127.0.0.1', PRIMARY_PORT=$PRIMARY_MYPORT;
--enable_query_log

# Try to replicate all queries until drop of t1

connection replica;
--replace_result $primary_pos_drop_t1 primary_pos_drop_t1
eval START REPLICA UNTIL PRIMARY_LOG_FILE='$primary_log_file', PRIMARY_LOG_POS=$primary_pos_drop_t1;
--source include/wait_for_replica_sql_to_stop.inc

# Here table should be still not deleted
SELECT * FROM t1;
--let $replica_param= Exec_Primary_Log_Pos
--let $replica_param_value= $primary_pos_drop_t1
--source include/check_replica_param.inc

# This should fail right after start
--replace_result 291 PRIMARY_LOG_POS
START REPLICA UNTIL PRIMARY_LOG_FILE='primary-no-such-bin.000001', PRIMARY_LOG_POS=291;
--source include/wait_for_replica_sql_to_stop.inc
# again this table should be still not deleted
SELECT * FROM t1;

--let $replica_param= Exec_Primary_Log_Pos
--let $replica_param_value= $primary_pos_drop_t1
--source include/check_replica_param.inc

# clean up
START REPLICA;
--source include/wait_for_replica_to_start.inc
connection primary;
--source include/sync_replica_sql_with_primary.inc
--source include/stop_replica.inc

# This should stop immediately as we are already there
echo START REPLICA SQL_THREAD UNTIL PRIMARY_LOG_FILE='$primary_log_file', PRIMARY_LOG_POS=primary_pos_create_t2;
--disable_query_log
eval START REPLICA SQL_THREAD UNTIL PRIMARY_LOG_FILE='$primary_log_file', PRIMARY_LOG_POS=$primary_pos_create_t2;
--enable_query_log
let $replica_param= Until_Log_Pos;
let $replica_param_value= $primary_pos_create_t2;
--source include/wait_for_replica_param.inc
--source include/wait_for_replica_sql_to_stop.inc
# here the sql replica thread should be stopped
--let $replica_param= Exec_Primary_Log_Pos
--let $replica_param_value= $primary_pos_drop_t2
--source include/check_replica_param.inc

#testing various error conditions
--replace_result 561 PRIMARY_LOG_POS
--error 1277
START REPLICA UNTIL PRIMARY_LOG_FILE='primary-bin', PRIMARY_LOG_POS=561;
--replace_result 561 PRIMARY_LOG_POS 12 RELAY_LOG_POS
--error 1277
START REPLICA UNTIL PRIMARY_LOG_FILE='primary-bin.000001', PRIMARY_LOG_POS=561, RELAY_LOG_POS=12;
--error 1277
START REPLICA UNTIL PRIMARY_LOG_FILE='primary-bin.000001';
--error 1277
START REPLICA UNTIL RELAY_LOG_FILE='replica-relay-bin.000009';
--replace_result 561 PRIMARY_LOG_POS
--error 1277
START REPLICA UNTIL RELAY_LOG_FILE='replica-relay-bin.000002', PRIMARY_LOG_POS=561;

--replace_result 740 PRIMARY_LOG_POS
START REPLICA UNTIL PRIMARY_LOG_FILE='primary-bin.000001', PRIMARY_LOG_POS=740;

--source include/stop_replica.inc
RESET REPLICA;
--source include/start_replica.inc

##############################################################################
# The second section - checks START REPLICA UNTIL RELAY_LOG_FILE =# 'log_name',
# RELAY_LOG_POS = log_pos. This section of the test does the following:
# 1) At primary, create a table and inserts a value. Let replica replicate this.
# 2) Stop replica sql thread.
# 3) Insert some more values at primary. Note that io thread copies this insert
# 4) Use start replica until to start the sql thread  and check if it
#    stops at the correct position.
##############################################################################

--source include/rpl_reset.inc

--connection primary
CREATE TABLE t1 (a INT);
INSERT INTO t1 VALUES (1);

--source include/sync_replica_sql_with_primary.inc
--source include/stop_replica_sql.inc

--connection primary
INSERT INTO t1 VALUES (2);
--let $primary_log_pos= query_get_value(SHOW PRIMARY STATUS, Position, 1)
INSERT INTO t1 VALUES (3);

--source include/sync_replica_io_with_primary.inc

--let $relay_log_file= query_get_value(SHOW REPLICA STATUS, Relay_Log_File,1)
--source include/get_relay_log_pos.inc

--disable_query_log
--eval start replica until relay_log_file='$relay_log_file', relay_log_pos=$relay_log_pos
--enable_query_log
--source include/wait_for_replica_sql_to_stop.inc

--let $assert_cond= COUNT(*) = 2 FROM t1
--let $assert_text= table t1 should have two rows.
--source include/assert.inc

#cleanup
--source include/start_replica.inc
--connection primary
DROP TABLE t1;
--source include/sync_replica_sql_with_primary.inc
--source include/rpl_end.inc
