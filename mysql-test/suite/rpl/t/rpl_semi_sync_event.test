--source include/not_group_replication_plugin.inc
source include/have_semisync_plugin.inc;
source include/not_embedded.inc;
source include/have_innodb.inc;
source include/primary-replica.inc;

let $engine_type= InnoDB;

# Suppress warnings that might be generated during the test
disable_query_log;
connection primary;
call mtr.add_suppression("Timeout waiting for reply of binlog");
call mtr.add_suppression("Semi-sync primary .* waiting for replica reply");
call mtr.add_suppression("Read semi-sync reply");
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT.");
call mtr.add_suppression(".*Got an error reading communication packets.*");
connection replica;
call mtr.add_suppression("Primary server does not support semi-sync");
call mtr.add_suppression("Semi-sync replica .* reply");
call mtr.add_suppression("Replica SQL.*Request to stop replica SQL Thread received while applying a group that has non-transactional changes; waiting for completion of the group");
enable_query_log;

connection primary;
disable_query_log;
let $value = query_get_value(show variables like 'rpl_semi_sync_primary_enabled', Value, 1);
if ($value == No such row)
{
    set sql_log_bin=0;
    eval INSTALL PLUGIN rpl_semi_sync_primary SONAME '$SEMISYNC_PRIMARY_PLUGIN';
    SET GLOBAL rpl_semi_sync_primary_enabled = 1;
    set sql_log_bin=1;
}
enable_query_log;

connection replica;
source include/stop_replica.inc;

disable_query_log;
let $value= query_get_value(show variables like 'rpl_semi_sync_replica_enabled', Value, 1);
if ($value == No such row)
{
    set sql_log_bin=0;
    eval INSTALL PLUGIN rpl_semi_sync_replica SONAME '$SEMISYNC_REPLICA_PLUGIN';
    SET GLOBAL rpl_semi_sync_replica_enabled = 1;
    set sql_log_bin=1;
}
enable_query_log;

source include/start_replica.inc;

connection primary;
SET GLOBAL event_scheduler = ON;

replace_result $engine_type ENGINE_TYPE;
eval CREATE TABLE t1 (i INT NOT NULL AUTO_INCREMENT PRIMARY KEY, f varchar(8)) ENGINE=$engine_type;
INSERT INTO t1 (f) VALUES ('a'),('a'),('a'),('a'),('a');
--disable_warnings
INSERT INTO t1 SELECT i+5, f FROM t1;
INSERT INTO t1 SELECT i+10, f FROM t1;
--enable_warnings
CREATE EVENT ev1 ON SCHEDULE EVERY 1 SECOND
DO INSERT INTO t1 VALUES (SLEEP(5),CONCAT('ev1_',CONNECTION_ID()));
CREATE EVENT ev2 ON SCHEDULE EVERY 1 SECOND
DO INSERT INTO t1 VALUES (SLEEP(5),CONCAT('ev2_',CONNECTION_ID()));

connection replica;
STOP REPLICA IO_THREAD;

connection primary;
let $run = 20;
while ($run)
{
        connect (m$run,localhost,root,,);
        connection m$run;
        send;
        eval UPDATE t1 SET f = CONCAT('up_',CONNECTION_ID()) WHERE i = $run;
        connection primary;
        dec $run;
}

connection primary;
SET GLOBAL event_scheduler = OFF;

let $run = 20;
while ($run)
{
	connection m$run;
	reap;
        disconnect m$run;
        dec $run;
}

#
# Clean up
#
connection replica;
source include/stop_replica.inc;

disable_warnings;
UNINSTALL PLUGIN rpl_semi_sync_replica;

connection primary;
UNINSTALL PLUGIN rpl_semi_sync_primary;
enable_warnings;

connection replica;
source include/start_replica.inc;

connection primary;
DROP EVENT ev1;
DROP EVENT ev2;
DROP TABLE t1;
--source include/sync_replica_sql_with_primary.inc
--source include/rpl_end.inc
