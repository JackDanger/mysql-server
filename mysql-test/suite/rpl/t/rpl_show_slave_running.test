#
# Bug #30703  SHOW STATUS LIKE 'Replica_running' is not compatible with `SHOW REPLICA STATUS'
# The test verifies that  SHOW STATUS LIKE 'Replica_running' displays ON
# if and only if `SHOW REPLICA STATUS' displays YES for Replica_IO_Running and  Replica_SQL_Running
#
--source include/not_group_replication_plugin.inc
source include/have_debug.inc;
source include/have_debug_sync.inc;
source include/primary-replica.inc;

connection replica;

SET DEBUG_SYNC= 'RESET';
source include/stop_replica.inc;
let $debug_saved= `select @@global.debug`;
set global debug= 'd,dbug.before_get_running_status_yes'; # to block due-started IO

# Test 1. Replica is stopped

--echo Replica_running, Replica_IO_Running, Replica_SQL_Running, must be OFF, NO, NO in three following queries

SHOW STATUS LIKE 'Replica_running';
let $status= query_get_value("show replica status", Replica_IO_Running, 1);
echo Replica_IO_Running= $status;
let $status= query_get_value("show replica status", Replica_SQL_Running, 1);
echo Replica_SQL_Running= $status;

#  Test 2. The replica IO thread is started but not yet got connected to primary
#          and SQL thread is not started

start replica io_thread;

#
# Notice a difference between versions in showing p.2: 
# 5.1 has two OFF,ON IO-thread state running state whereas later versions
# have three: OFF,Connecting,ON.
# Hence, 5.1 must display OFF NO NO where as 5.1+ OFF Connecting NO
# (thank you, Andrei for leaving these comments. -- Andrei repl MC at the moment)
#
--echo Replica_running, Replica_IO_Running, Replica_SQL_Running must be OFF Connecting NO in three following queries

SHOW STATUS LIKE 'Replica_running';
let $status= query_get_value("show replica status", Replica_IO_Running, 1);
echo Replica_IO_Running= $status;
let $status= query_get_value("show replica status", Replica_SQL_Running, 1);
echo Replica_SQL_Running= $status;

# Test 3. The replica IO thread is started and got connected to primary
#         and SQL thread is still not started

SET DEBUG_SYNC='now SIGNAL signal.io_thread_let_running'; # unblock IO thread now
let $replica_param= Replica_IO_Running;
let $replica_param_value= YES;
source include/wait_for_replica_param.inc;

--echo Replica_running, Replica_IO_Running, Replica_SQL_Running must be OFF YES NO in three following queries

SHOW STATUS LIKE 'Replica_running';
let $status= query_get_value("show replica status", Replica_IO_Running, 1);
echo Replica_IO_Running= $status;
let $status= query_get_value("show replica status", Replica_SQL_Running, 1);
echo Replica_SQL_Running= $status;

# Test 4. The replica IO thread is started and got connected to primary
#         and SQL thread is started

start replica sql_thread;
source include/wait_for_replica_sql_to_start.inc;

--echo Replica_running, Replica_IO_Running, Replica_SQL_Running must be ON, YES, YES in three following queries

SHOW STATUS LIKE 'Replica_running';
let $status= query_get_value("show replica status", Replica_IO_Running, 1);
echo Replica_IO_Running= $status;
let $status= query_get_value("show replica status", Replica_SQL_Running, 1);
echo Replica_SQL_Running= $status;

# cleanup

connection primary;

# Bug#11765758 - 58754
# @@global.debug is read by the replica threads through dbug-interface. 
# Hence, before a client thread set @@global.debug we have to ensure that:
# (a) the replica threads are stopped, or (b) the replica threads are in
# sync and waiting.
--source include/sync_replica_sql_with_primary.inc

eval set global debug= '$debug_saved';

SET DEBUG_SYNC= 'RESET';
--echo End of tests
--source include/rpl_end.inc
