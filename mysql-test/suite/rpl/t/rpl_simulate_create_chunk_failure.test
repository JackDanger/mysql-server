# ==== Purpose ====
#
# Bug #18963676  MISSED TO HANDLE OOM ERROR WHILE ADDING A GTID INTO GTID SET
#
# Verify that we can get correct global @@GTID_EXECUTED after server
# restarts from a crash caused by 'OUT OF MEMORY' error on adding
# GTID into global @@GTID_EXECUTED.
#
# ==== Implementation ====
#
# 1) Commit a transaction on primary.
# 2) Wait the replica server crash caused by 'OUT OF MEMORY' error
#    on adding GTID into @@GLOBAL.GTID_EXECUTED when applying
#    the replicated transaction.
# 3) Verify that the transaction is committed and its GTID is
#    added into @@GLOBAL.GTID_EXECUTED and 'gtid_executed'
#    table after replica server restarts.
#

# Test in this file is binlog format agnostic, thus no need
# to rerun them for every format.
--source include/have_binlog_format_row.inc
--source include/have_gtid.inc
--source include/not_group_replication_plugin.inc
--source include/primary-replica.inc
# Restrict the test runs to only debug builds, since we set DEBUG point in the test.
--source include/have_debug.inc

--source include/rpl_connection_replica.inc
call mtr.add_suppression("You need to use --log-bin to make --binlog-format work");
SET @debug_save= @@GLOBAL.DEBUG;
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
SET @@GLOBAL.DEBUG= '+d,rpl_gtid_update_on_commit_simulate_out_of_memory';

--source include/rpl_connection_primary.inc
--let $primary_uuid= `SELECT @@GLOBAL.SERVER_UUID`
--echo #
--echo # Commit a transaction on primary
--echo #
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);

--source include/rpl_connection_replica.inc
--echo #
--echo # Wait the replica server crash caused by 'OUT OF MEMORY' error
--echo # on adding GTID into @@GLOBAL.GTID_EXECUTED when applying
--echo # the replicated transaction.
--echo #
--source include/wait_until_disconnected.inc
--let $rpl_server_number= 2
--source include/rpl_start_server.inc

--echo #
--echo # Verify that the transaction is committed and its GTID is
--echo # added into @@GLOBAL.GTID_EXECUTED and 'gtid_executed'
--echo # table after replica server restarts.
--echo #
SET @@GLOBAL.DEBUG= @debug_save;
--replace_result $primary_uuid PRIMARY_UUID
--eval SELECT * FROM mysql.gtid_executed
--let $assert_text= committed gtids PRIMARY_UUID:1
--let $assert_cond= "[SELECT @@GLOBAL.GTID_EXECUTED]" = "$primary_uuid:1"

--let $assert_text= Table t1 exists and is empty
--let $assert_cond= "[SELECT c1 FROM t1]" = ""
--source include/assert.inc
--source include/start_replica.inc

# Cleanup
--source include/rpl_connection_primary.inc
DROP TABLE t1;
--source include/rpl_end.inc

