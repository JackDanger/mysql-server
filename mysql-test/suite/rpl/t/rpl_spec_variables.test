#############################################################
# Author: Serge Kozlov <skozlov@mysql.com>
# Date:   07/01/2008
# Purpose: Testing possible affects of some system dynamic 
# variables to the replication. 
# Scenario for each variable:
# 1) Set different values for primary and replica
# 2) Create and replicate a data from primary to replica
# 3) Check results on primary and replica: changes on replica 
# shouldn't be affected to replicated data.
#############################################################
--source include/not_group_replication_plugin.inc
--source include/have_innodb.inc
--source include/have_myisam.inc
--source include/primary-replica.inc
--echo

#
# AUTO_INCREMENT
#
--echo * auto_increment_increment, auto_increment_offset *

--connection primary
SET @@global.auto_increment_increment=2;
SET @@session.auto_increment_increment=2;
SET @@global.auto_increment_offset=10;
SET @@session.auto_increment_offset=10;

--connection replica
SET @@global.auto_increment_increment=3;
SET @@session.auto_increment_increment=3;
SET @@global.auto_increment_offset=20;
SET @@session.auto_increment_offset=20;

--connection primary
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT PRIMARY KEY, b VARCHAR(10)) ENGINE=MyISAM;
INSERT INTO t1 (b) VALUES ('primary');
INSERT INTO t1 (b) VALUES ('primary');
SELECT * FROM t1 ORDER BY a;

--source include/sync_replica_sql_with_primary.inc
CREATE TABLE t2 (a INT NOT NULL AUTO_INCREMENT PRIMARY KEY, b VARCHAR(10)) ENGINE=MyISAM;
INSERT INTO t1 (b) VALUES ('replica');
INSERT INTO t1 (b) VALUES ('replica');
INSERT INTO t2 (b) VALUES ('replica');
INSERT INTO t2 (b) VALUES ('replica');
SELECT * FROM t1 ORDER BY a;
SELECT * FROM t2 ORDER BY a;

--connection primary
--disable_warnings
DROP TABLE IF EXISTS t1,t2;
--enable_warnings
SET @@global.auto_increment_increment=1;
SET @@session.auto_increment_increment=1;
SET @@global.auto_increment_offset=1;
SET @@session.auto_increment_offset=1;

--connection replica
SET @@global.auto_increment_increment=1;
SET @@session.auto_increment_increment=1;
SET @@global.auto_increment_offset=1;
SET @@session.auto_increment_offset=1;

--connection replica
SET auto_increment_increment=1;
SET auto_increment_offset=1;
--echo

#
# CHARACTER_SET_DATABASE, COLLATION_SERVER
#
--echo * character_set_database, collation_server *

--connection primary
SET @restore_primary_character_set_database=@@global.character_set_database;
SET @restore_primary_collation_server=@@global.collation_server;
SET @@global.character_set_database=latin1;
SET @@session.character_set_database=latin1;
SET @@global.collation_server=latin1_german1_ci;
SET @@session.collation_server=latin1_german1_ci;

--connection replica
SET @restore_replica_character_set_database=@@global.character_set_database;
SET @restore_replica_collation_server=@@global.collation_server;
SET @@global.character_set_database=utf8;
SET @@session.character_set_database=utf8;
SET @@global.collation_server=utf8_bin;
SET @@session.collation_server=utf8_bin;

--connection primary
CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY, b VARCHAR(10)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;

--source include/sync_replica_sql_with_primary.inc
CREATE TABLE t2 (a INT NOT NULL PRIMARY KEY, b VARCHAR(10)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
SHOW CREATE TABLE t2;

SET @@global.collation_server=latin1_swedish_ci;
SET @@session.collation_server=latin1_swedish_ci;

--connection primary
SET @@global.collation_server=latin1_swedish_ci;
SET @@session.collation_server=latin1_swedish_ci;

--disable_warnings
DROP TABLE IF EXISTS t1,t2;
--enable_warnings
--echo

#
# DEFAULT_WEEK_FORMAT
#
--echo * default_week_format *

--connection primary
SET @@global.default_week_format=0;
SET @@session.default_week_format=0;

--connection replica
SET @@global.default_week_format=1;
SET @@session.default_week_format=1;

--connection primary
CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY, b VARCHAR(10), c INT) ENGINE=MyISAM;
INSERT INTO t1 VALUES (1, 'primary ', WEEK('2008-01-07'));
SELECT * FROM t1 ORDER BY a;

--source include/sync_replica_sql_with_primary.inc
INSERT INTO t1 VALUES (2, 'replica ', WEEK('2008-01-07'));
SELECT * FROM t1 ORDER BY a;

--connection primary
DROP TABLE t1;

--connection replica
SET @@global.default_week_format=0;
SET @@session.default_week_format=0;
--echo

#
# LOCAL_INFILE
#
--echo * local_infile *

--connection replica
SET @@global.local_infile=0;

--connection primary
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT PRIMARY KEY, b VARCHAR(20), c CHAR(254)) ENGINE=MyISAM;
--copy_file ./std_data/words.dat $MYSQLTEST_VARDIR/tmp/words.dat
--copy_file ./std_data/words2.dat $MYSQLTEST_VARDIR/tmp/words2.dat
--replace_regex /\'.+\'/'FILE'/
--eval LOAD DATA LOCAL INFILE '$MYSQLTEST_VARDIR/tmp/words.dat' INTO TABLE t1 (b)
SELECT COUNT(*) FROM t1;
--source include/sync_replica_sql_with_primary.inc
--replace_regex /\'.+\'/'FILE2'/
--error 1148
--eval LOAD DATA LOCAL INFILE '$MYSQLTEST_VARDIR/tmp/words2.dat' INTO TABLE t1 (b)
SELECT COUNT(*) FROM t1;

SET @@global.local_infile=1;

--connection primary
DROP TABLE t1;
--echo

#
# MAX_HEAP_TABLE_SIZE
#
--echo * max_heap_table_size *

--connection replica
SET @restore_replica_max_heap_table_size=@@global.max_heap_table_size;
SET @@global.max_heap_table_size=16384;
SET @@session.max_heap_table_size=16384;

--connection primary
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT PRIMARY KEY, b VARCHAR(10), c CHAR(254)) ENGINE=MEMORY;
let $counter=2000;
--disable_query_log
while ($counter) {
 INSERT INTO t1 (b,c) VALUES ('primary', REPEAT('A', 254));
 dec $counter;
}
--enable_query_log
SELECT COUNT(*)=2000 FROM t1;

--source include/sync_replica_sql_with_primary.inc
let $counter=2000;
--disable_query_log
while ($counter) {
 --error 0,1114
 INSERT INTO t1 (b,c) VALUES ('replica', REPEAT('A', 254));
 dec $counter;
}
CREATE TABLE t2 (a INT NOT NULL AUTO_INCREMENT PRIMARY KEY, b VARCHAR(10), c CHAR(254)) ENGINE=MEMORY;
let $counter=2000;
--disable_query_log
while ($counter) {
 --error 0,1114
 INSERT INTO t2 (b,c) VALUES ('replica', REPEAT('A', 254));
 dec $counter;
}
--enable_query_log
# We don't know how many memory used and can't check exact values so need to check following 
# conditions
SELECT COUNT(*)=2000 FROM t1 WHERE b='primary' GROUP BY b ORDER BY b;
SELECT COUNT(*)<2000 AND COUNT(*)>0 FROM t1 WHERE b='replica' GROUP BY b ORDER BY b;
SELECT COUNT(*)<2000 AND COUNT(*)>0 FROM t2 WHERE b='replica' GROUP BY b ORDER BY b;

--connection primary
--disable_warnings
DROP TABLE IF EXISTS t1,t2;
--enable_warnings
--echo

#
# STORAGE_ENGINE
#
--echo * storage_engine *

--connection primary
SET @restore_primary_storage_engine=@@global.default_storage_engine;
SET @@global.default_storage_engine=InnoDB;
SET @@session.default_storage_engine=InnoDB;

--connection replica
SET @restore_replica_storage_engine=@@global.default_storage_engine;
SET @@global.default_storage_engine=Memory;
SET @@session.default_storage_engine=Memory;

--connection primary
CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY, b VARCHAR(10));
CREATE TABLE t2 (a INT NOT NULL PRIMARY KEY, b VARCHAR(10)) ENGINE=InnoDB;

--source include/sync_replica_sql_with_primary.inc
CREATE TABLE t3 (a INT NOT NULL PRIMARY KEY, b VARCHAR(10));

--connection primary
SHOW CREATE TABLE t1;
SHOW CREATE TABLE t2;

--connection replica
SHOW CREATE TABLE t1;
SHOW CREATE TABLE t2;
SHOW CREATE TABLE t3;

SET @@global.default_storage_engine=InnoDB;
SET @@session.default_storage_engine=InnoDB;

--connection primary
--disable_warnings
DROP TABLE IF EXISTS t1,t2,t3;
--enable_warnings
--echo

#
# SQL_MODE
#
--echo * sql_mode *

--connection primary
SET @@global.sql_mode=ANSI;
SET @@session.sql_mode=ANSI;

--connection replica
SET @@global.sql_mode=TRADITIONAL;
SET @@session.sql_mode=TRADITIONAL;

--connection primary
CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY, b VARCHAR(10), c DATE);
INSERT INTO t1 VALUES (1, 'primary', '0000-00-00');
SELECT * FROM t1 ORDER BY a;

--source include/sync_replica_sql_with_primary.inc
--error 1292
INSERT INTO t1 VALUES (1, 'replica', '0000-00-00');
SELECT * FROM t1 ORDER BY a;
SET @@global.sql_mode=DEFAULT;
SET @@session.sql_mode=DEFAULT;

--connection primary
SET @@global.sql_mode=DEFAULT;
SET @@session.sql_mode=DEFAULT;
DROP TABLE t1;
--echo


# Clean up
--echo *** clean up ***
--connection primary
SET @@global.character_set_database=@restore_primary_character_set_database;
SET @@global.collation_server=@restore_primary_collation_server;
SET @@global.default_storage_engine=@restore_primary_storage_engine;
--source include/sync_replica_sql_with_primary.inc
SET @@global.character_set_database=@restore_replica_character_set_database;
SET @@global.collation_server=@restore_replica_collation_server;
SET @@global.max_heap_table_size=@restore_replica_max_heap_table_size;
SET @@global.default_storage_engine=@restore_replica_storage_engine;

# Put at the end since the test otherwise emptied the table.

--echo
call mtr.add_suppression("The table 't[12]' is full");

# End of 5.1 test 
--source include/rpl_end.inc
