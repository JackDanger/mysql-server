--source include/not_group_replication_plugin.inc
source include/have_ssl_communication.inc;
source include/primary-replica.inc;

# create a user for replication that requires ssl encryption
connection primary;
set @orig_sql_mode= @@sql_mode;
set sql_mode= (select replace(@@sql_mode,'NO_AUTO_CREATE_USER',''));
grant replication replica on *.* to replssl@localhost require ssl;
set sql_mode= @orig_sql_mode;
create table t1 (t int auto_increment, KEY(t));

--source include/sync_replica_sql_with_primary.inc

# Set replica to use SSL for connection to primary
stop replica;
--replace_result $MYSQL_TEST_DIR MYSQL_TEST_DIR
--replace_column 2 ####
eval change primary to
  primary_user='replssl',
  primary_password='',
  primary_ssl=1,
  primary_ssl_ca ='$MYSQL_TEST_DIR/std_data/cacert.pem',
  primary_ssl_cert='$MYSQL_TEST_DIR/std_data/client-cert.pem',
  primary_ssl_key='$MYSQL_TEST_DIR/std_data/client-key.pem';
start replica;

# Switch to primary and insert one record, then sync it to replica
connection primary;
insert into t1 values(1);
--source include/sync_replica_sql_with_primary.inc

# The record should now be on replica
select * from t1;

# The replica is synced and waiting/reading from primary
# SHOW REPLICA STATUS will show "Waiting for primary to send event"
let $status_items= Primary_SSL_Allowed, Primary_SSL_CA_Path, Primary_SSL_CA_File, Primary_SSL_Cert, Primary_SSL_Key;
source include/show_replica_status.inc;
source include/check_replica_is_running.inc;

# Stop the replica, as reported in bug#21871 it would hang
STOP REPLICA;

select * from t1;

# Do the same thing a number of times
disable_query_log;
disable_result_log;
# 2007-11-27 mats Bug #32756  	Starting and stopping the replica in a loop can lose rows
# After discussions with Engineering, I'm disabling this part of the test to avoid it causing
# red trees.
disable_parsing;
let $i= 100;
while ($i)
{
  start replica;
  connection primary;
  insert into t1 values (NULL);
  select * from t1; # Some variance
  connection replica;
  select * from t1; # Some variance
  stop replica;
  dec $i;
}
enable_parsing;
START REPLICA;
enable_query_log;
enable_result_log;
connection primary;
# INSERT one more record to make sure
# the sync has something to do
insert into t1 values (NULL);
let $primary_count= `select count(*) from t1`;

--source include/sync_replica_sql_with_primary.inc
--source include/wait_for_replica_to_start.inc
source include/show_replica_status.inc;
source include/check_replica_is_running.inc;

let $replica_count= `select count(*) from t1`;

if ($replica_count != $primary_count)
{
  echo primary and replica differed in number of rows;
  echo primary: $primary_count;
  echo replica: $replica_count;

  connection primary;
  echo === primary ===;
  select count(*) t1;
  select * from t1;
  connection replica;
  echo === replica ===;
  select count(*) t1;
  select * from t1;
  query_vertical show replica status;
}

connection primary;
drop user replssl@localhost;
drop table t1;
--source include/sync_replica_sql_with_primary.inc

# ==== BUG#18165937: HITTING CRASH WHEN SETTING SSL OPTIONS THROUGH CHANGE PRIMARY COMMAND ====
#
# The server would crash when setting SSL_CRL options using CHANGE
# PRIMARY with YASSL enabled.

--source include/stop_replica.inc
--replace_column 2 ####
CHANGE PRIMARY TO
 primary_user = 'root',
 primary_ssl = 0,
 primary_ssl_ca = '',
 primary_ssl_cert = '',
 primary_ssl_key = '',
 primary_ssl_crl='',
 primary_ssl_crlpath='';

--replace_result $MYSQL_TEST_DIR MYSQL_TEST_DIR
eval CHANGE PRIMARY TO PRIMARY_SSL= 1, PRIMARY_SSL_CRL='$MYSQL_TEST_DIR/std_data/crl-client-revoked.crl', PRIMARY_SSL_CRLPATH='$MYSQL_TEST_DIR/std_data/crldir';
--source include/start_replica.inc


--source include/stop_replica.inc
--replace_column 2 ####
CHANGE PRIMARY TO
 primary_user = 'root',
 primary_ssl = 0,
 primary_ssl_ca = '',
 primary_ssl_cert = '',
 primary_ssl_key = '',
 primary_ssl_crl='',
 primary_ssl_crlpath='';

--echo End of 5.0 tests
--let $rpl_only_running_threads= 1
--source include/rpl_end.inc
