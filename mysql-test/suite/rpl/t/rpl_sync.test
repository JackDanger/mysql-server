########################################################################################
# This test verifies the options --sync-relay-log-info and --relay-log-recovery by 
# crashing the replica in two different situations:
#  (case-1) - Corrupt the relay log with changes which were not processed by
#  the SQL Thread and crashes it.
#  (case-2) - Corrupt the primary.info with wrong coordinates and crashes it.
#
#  Case 1:
#    1 - Stops the SQL Thread
#    2 - Inserts new records into the primary.
#    3 - Corrupts the relay-log.bin* which most likely has such changes.
#    4 - Crashes the replica
#    5 - Verifies if the replica is sync with the primary which means that the information
#    loss was circumvented by the recovery process.
#
#  Case 2:
#    1 - Stops the SQL/IO Threads
#    2 - Inserts new records into the primary.
#    3 - Corrupts the primary.info with wrong coordinates.
#    4 - Crashes the replica
#    5 - Verifies if the replica is sync with the primary which means that the information
#    loss was circumvented by the recovery process.
########################################################################################
########################################################################################
#                                Configuring the environment
########################################################################################
--echo =====Configuring the enviroment=======;
--source include/not_group_replication_plugin.inc
--source include/primary-replica.inc
--source include/not_embedded.inc
--source include/not_valgrind.inc
--source include/have_debug.inc
--source include/have_innodb.inc
--source include/not_primary_info_table.inc
--source include/not_crashrep.inc

call mtr.add_suppression('Attempting backtrace');
call mtr.add_suppression("Recovery from primary pos .* and file primary-bin.000001");
call mtr.add_suppression("Binlog has bad magic number;  It's not a binary log file that can be used by this version of MySQL");
CREATE TABLE t1(a INT, PRIMARY KEY(a)) engine=innodb;

insert into t1(a) values(1);
insert into t1(a) values(2);
insert into t1(a) values(3);

########################################################################################
#                             Case 1: Corrupt a relay-log.bin*
########################################################################################
--echo =====Inserting data on the primary but without the SQL Thread being running=======;
--source include/sync_replica_sql_with_primary.inc

connection replica;
let $MYSQLD_REPLICA_DATADIR= `select @@datadir`;
--replace_result $MYSQLD_REPLICA_DATADIR MYSQLD_REPLICA_DATADIR
--copy_file $MYSQLD_REPLICA_DATADIR/primary.info $MYSQLD_REPLICA_DATADIR/primary.backup
--source include/stop_replica_sql.inc

connection primary;
insert into t1(a) values(4);
insert into t1(a) values(5);
insert into t1(a) values(6);

--echo =====Removing relay log files and crashing/recoverying the replica=======;
connection replica;
--source include/stop_replica_io.inc

let $file= query_get_value("SHOW REPLICA STATUS", Relay_Log_File, 1);

--let FILE_TO_CORRUPT= $MYSQLD_REPLICA_DATADIR/$file
perl;
$file= $ENV{'FILE_TO_CORRUPT'};
open(FILE, ">$file") || die "Unable to open $file.";
truncate(FILE,0);
print FILE "failure";
close ($file);
EOF

--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
SET SESSION debug="d,crash_before_rotate_relaylog";
--error 2013
FLUSH LOGS;

--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

--echo =====Dumping and comparing tables=======;
--source include/start_replica.inc

connection primary;
--source include/sync_replica_sql_with_primary.inc

let $diff_tables=primary:t1,replica:t1;
source include/diff_tables.inc;

########################################################################################
#                             Case 2: Corrupt a primary.info
########################################################################################
--echo =====Corrupting the primary.info=======;
connection replica;
--source include/stop_replica.inc

connection primary;
FLUSH LOGS;

insert into t1(a) values(7);
insert into t1(a) values(8);
insert into t1(a) values(9);

connection replica;
let MYSQLD_REPLICA_DATADIR=`select @@datadir`;

--perl
use strict;
use warnings;
my $src= "$ENV{'MYSQLD_REPLICA_DATADIR'}/primary.backup";
my $dst= "$ENV{'MYSQLD_REPLICA_DATADIR'}/primary.info";
open(FILE, "<", $src) or die;
my @content= <FILE>;
close FILE;
open(FILE, ">", $dst) or die;
binmode FILE;
print FILE @content;
close FILE;
EOF

--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
SET SESSION debug="d,crash_before_rotate_relaylog";
--error 2013
FLUSH LOGS;

--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

--echo =====Dumping and comparing tables=======;
--source include/start_replica.inc

connection primary;
--source include/sync_replica_sql_with_primary.inc

let $diff_tables=primary:t1,replica:t1;
source include/diff_tables.inc;

########################################################################################
#                                      Clean up
########################################################################################
--echo =====Clean up=======;
connection primary;
drop table t1;

--remove_file $MYSQLD_REPLICA_DATADIR/primary.backup
--source include/rpl_end.inc

